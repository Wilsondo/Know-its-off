{"ast":null,"code":"var _jsxFileName = \"/mnt/e/MyReact/new_frontend/src/components/firebase.js\";\nimport firebase from 'firebase/app';\nimport 'firebase/messaging';\nimport React, { Component } from 'react';\nimport axiosBaseURL from '../axios.js';\nimport { Redirect } from 'react-router-dom';\nimport { Toast } from 'react-bootstrap';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar firebaseConfig = {\n  apiKey: \"AIzaSyCGG2bVOzc9jR_dPhNlTxEn_ZTajkcHVzo\",\n  authDomain: \"know-its-off-jsyg.firebaseapp.com\",\n  projectId: \"know-its-off-jsyg\",\n  storageBucket: \"know-its-off-jsyg.appspot.com\",\n  messagingSenderId: \"1039398438265\",\n  appId: \"1:1039398438265:web:f0e1ae04a1db6c68025ba8\"\n};\nfirebase.initializeApp(firebaseConfig);\nconst messaging = firebase.messaging();\nexport const getToken = setTokenFound => {\n  return messaging.getToken({\n    vapidKey: 'BHqTAUfRBDJlK88PZlXUl92tdXi_YmKp7HaR0RMHQBp0cXZ9bKxW3m53TN9KAf6WhuuO6ZkhYObb9fNOae85ZAc'\n  }).then(currentToken => {\n    if (currentToken) {\n      // console.log('current token for client: ', currentToken);\n      setTokenFound = true; // Track the token -> client mapping, by sending to backend server\n      // show on the UI that permission is secured\n    } else {\n      console.log('No registration token available. Request permission to generate one.');\n      setTokenFound = false; // shows on the UI that permission is required \n    }\n  }).catch(err => {\n    console.log('An error occurred while retrieving token. ', err); // catch error while creating client token\n  });\n};\nexport const onMessageListener = () => new Promise(resolve => {\n  messaging.onMessage(payload => {\n    resolve(payload);\n  });\n});\nexport default class Firebase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.changeNotification = myDevices => {\n      let currentDate = new Date();\n\n      for (var x = 0; myDevices.length > x; x++) {\n        if (myDevices[x].device_state === 1) {\n          if (currentDate.getTime() - Date.parse(myDevices[x].timestamp) >= 1800000) {\n            //console.log(currentDate - Date.parse(myDevices[x].timestamp));\n            axios.post('https://fcm.googleapis.com/fcm/send', this.state.post, {\n              headers: {\n                'content-type': 'application/json'\n              }\n            });\n          }\n        }\n      }\n    };\n\n    this.state = {\n      myDevices: [{\n        device_state: 1,\n        timestamp: \"\"\n      }],\n      setTokenFound: false,\n      show: false,\n      notification: {\n        title: '',\n        body: ''\n      },\n      error: false,\n      redirect: null,\n      post: {\n        notification: {\n          title: \"Firebase\",\n          body: \"Firebase is awesome\",\n          click_action: \"http://localhost:3000/\",\n          icon: \"http://url-to-an-icon/icon.png\"\n        },\n        user: \"USER TOKEN\"\n      }\n    };\n  }\n\n  componentDidMount() {\n    axiosBaseURL.get(\"/devices\").then(app_result => {\n      this.changeNotification(app_result.data);\n    });\n  }\n\n  render() {\n    if (this.state.error) {\n      if (this.state.redirect) {\n        return /*#__PURE__*/_jsxDEV(Redirect, {\n          to: this.state.redirect\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 39\n        }, this);\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"There was an error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: this.state.error_response\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 46\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 14\n      }, this);\n    }\n\n    getToken(this.state.setTokenFound);\n    onMessageListener().then(payload => {\n      this.setState({\n        notification: {\n          title: payload.notification.title,\n          body: payload.notification.body,\n          show: true\n        }\n      });\n      console.log(payload);\n    }).catch(err => console.log('failed: ', err));\n    return /*#__PURE__*/_jsxDEV(Toast, {\n      onClose: () => this.setState({\n        show: false\n      }),\n      show: this.state.show,\n      delay: 3000,\n      autohide: true,\n      animation: true,\n      style: {\n        position: 'absolute',\n        top: 20,\n        right: 20,\n        minWidth: 200\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/mnt/e/MyReact/new_frontend/src/components/firebase.js"],"names":["firebase","React","Component","axiosBaseURL","Redirect","Toast","axios","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","initializeApp","messaging","getToken","setTokenFound","vapidKey","then","currentToken","console","log","catch","err","onMessageListener","Promise","resolve","onMessage","payload","Firebase","constructor","props","changeNotification","myDevices","currentDate","Date","x","length","device_state","getTime","parse","timestamp","post","state","headers","show","notification","title","body","error","redirect","click_action","icon","user","componentDidMount","get","app_result","data","render","error_response","setState","position","top","right","minWidth"],"mappings":"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","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/messaging';\r\nimport React, {Component} from 'react';\r\nimport axiosBaseURL from '../axios.js';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Toast } from 'react-bootstrap';\r\nimport axios from 'axios';\r\n\r\n\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyCGG2bVOzc9jR_dPhNlTxEn_ZTajkcHVzo\",\r\n  authDomain: \"know-its-off-jsyg.firebaseapp.com\",\r\n  projectId: \"know-its-off-jsyg\",\r\n  storageBucket: \"know-its-off-jsyg.appspot.com\",\r\n  messagingSenderId: \"1039398438265\",\r\n  appId: \"1:1039398438265:web:f0e1ae04a1db6c68025ba8\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst messaging = firebase.messaging();\r\n\r\nexport const getToken = (setTokenFound) => {\r\n  return messaging.getToken({vapidKey: 'BHqTAUfRBDJlK88PZlXUl92tdXi_YmKp7HaR0RMHQBp0cXZ9bKxW3m53TN9KAf6WhuuO6ZkhYObb9fNOae85ZAc'}).then((currentToken) => {\r\n    if (currentToken) {\r\n      // console.log('current token for client: ', currentToken);\r\n      setTokenFound = true;\r\n      // Track the token -> client mapping, by sending to backend server\r\n      // show on the UI that permission is secured\r\n    } else {\r\n      console.log('No registration token available. Request permission to generate one.');\r\n      setTokenFound = false;\r\n      // shows on the UI that permission is required \r\n    }\r\n  }).catch((err) => {\r\n    console.log('An error occurred while retrieving token. ', err);\r\n    // catch error while creating client token\r\n  });\r\n}\r\n\r\nexport const onMessageListener = () =>\r\nnew Promise((resolve) => {\r\n  messaging.onMessage((payload) => {\r\n    resolve(payload);\r\n  });\r\n});\r\n\r\nexport default class Firebase extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n    this.state = {\r\n      myDevices: [\r\n        { device_state: 1, timestamp: \"\" }\r\n      ],\r\n      setTokenFound: false, \r\n      show: false, \r\n      notification: {title: '', body: ''},\r\n      error: false,\r\n      redirect: null,\r\n      post: {\r\n        notification: {\r\n              title: \"Firebase\",\r\n              body: \"Firebase is awesome\",\r\n              click_action: \"http://localhost:3000/\",\r\n              icon: \"http://url-to-an-icon/icon.png\"\r\n          },\r\n        user: \"USER TOKEN\"\r\n      }\r\n    }\r\n  };\r\n\r\n//  Take in an array of devices\r\n//     For each device in array:\r\n//       if device.state == 1:\r\n//         if device.timestamp is 30+ minutes old:\r\n//           send notification\r\n\r\n// Probably should add a cool down timer to prevent constant notifications.\r\n  changeNotification = (myDevices) => {\r\n    let currentDate = new Date();\r\n    for(var x = 0; myDevices.length > x; x++){\r\n       if(myDevices[x].device_state === 1){\r\n        if((currentDate.getTime() - Date.parse(myDevices[x].timestamp)) >= 1800000){\r\n          //console.log(currentDate - Date.parse(myDevices[x].timestamp));\r\n          axios.post('https://fcm.googleapis.com/fcm/send', this.state.post, { \r\n            headers: {\r\n              'content-type': 'application/json'\r\n            }\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    axiosBaseURL.get(\"/devices\").then( (app_result) => {\r\n      this.changeNotification(app_result.data);\r\n    })\r\n  }\r\n\r\n  render() {\r\n    if(this.state.error) {\r\n      if(this.state.redirect) {return <Redirect to={this.state.redirect} />}\r\n      return(<div><h3>There was an error</h3><h3>{this.state.error_response}</h3></div>)\r\n    }\r\n    getToken(this.state.setTokenFound);\r\n    onMessageListener().then(payload => {\r\n       this.setState({notification: {title: payload.notification.title, body: payload.notification.body, show: true}})\r\n       console.log(payload);\r\n     }).catch(err => console.log('failed: ', err));\r\n    return(\r\n      <Toast onClose={() => this.setState({show: false})} show={this.state.show} delay={3000} autohide animation style={{\r\n        position: 'absolute',\r\n        top: 20,\r\n        right: 20,\r\n        minWidth: 200}}></Toast>\r\n    )\r\n  }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}