{"ast":null,"code":"import _slicedToArray from\"/mnt/e/MyReact/new_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{memo,useRef}from\"react\";import{useDrag,useDrop}from\"react-dnd\";var DragItem=/*#__PURE__*/memo(function(_ref){var id=_ref.id,onMoveItem=_ref.onMoveItem,children=_ref.children;var ref=useRef(null);var _useDrag=useDrag({item:{id:id,type:\"IMG\"},collect:function collect(monitor){return{isDragging:monitor.isDragging()};}}),_useDrag2=_slicedToArray(_useDrag,2),isDragging=_useDrag2[0].isDragging,connectDrag=_useDrag2[1];var _useDrop=useDrop({accept:\"IMG\",hover:function hover(hoveredOverItem){if(hoveredOverItem.id!==id){onMoveItem(hoveredOverItem.id,id);}}}),_useDrop2=_slicedToArray(_useDrop,2),connectDrop=_useDrop2[1];connectDrag(ref);connectDrop(ref);var opacity=isDragging?0.5:1;var containerStyle={opacity:opacity};return React.Children.map(children,function(child){return/*#__PURE__*/React.cloneElement(child,{forwardedRef:ref,style:containerStyle});});});export default DragItem;","map":{"version":3,"sources":["/mnt/e/MyReact/new_frontend/src/components/grid/DragItem.js"],"names":["React","memo","useRef","useDrag","useDrop","DragItem","id","onMoveItem","children","ref","item","type","collect","monitor","isDragging","connectDrag","accept","hover","hoveredOverItem","connectDrop","opacity","containerStyle","Children","map","child","cloneElement","forwardedRef","style"],"mappings":"kJAAA,MAAOA,CAAAA,KAAP,EAAgBC,IAAhB,CAAsBC,MAAtB,KAAoC,OAApC,CACA,OAASC,OAAT,CAAkBC,OAAlB,KAAiC,WAAjC,CAEA,GAAMC,CAAAA,QAAQ,cAAGJ,IAAI,CAAC,cAAkC,IAA/BK,CAAAA,EAA+B,MAA/BA,EAA+B,CAA3BC,UAA2B,MAA3BA,UAA2B,CAAfC,QAAe,MAAfA,QAAe,CACtD,GAAMC,CAAAA,GAAG,CAAGP,MAAM,CAAC,IAAD,CAAlB,CADsD,aAGhBC,OAAO,CAAC,CAC5CO,IAAI,CAAE,CAAEJ,EAAE,CAAFA,EAAF,CAAMK,IAAI,CAAE,KAAZ,CADsC,CAE5CC,OAAO,CAAE,iBAAAC,OAAO,CAAI,CAClB,MAAO,CACLC,UAAU,CAAED,OAAO,CAACC,UAAR,EADP,CAAP,CAGD,CAN2C,CAAD,CAHS,sCAG7CA,UAH6C,cAG7CA,UAH6C,CAG/BC,WAH+B,2BAY9BX,OAAO,CAAC,CAC9BY,MAAM,CAAE,KADsB,CAE9BC,KAF8B,gBAExBC,eAFwB,CAEP,CACrB,GAAIA,eAAe,CAACZ,EAAhB,GAAuBA,EAA3B,CAA+B,CAC7BC,UAAU,CAACW,eAAe,CAACZ,EAAjB,CAAqBA,EAArB,CAAV,CACD,CACF,CAN6B,CAAD,CAZuB,sCAY7Ca,WAZ6C,cAqBtDJ,WAAW,CAACN,GAAD,CAAX,CACAU,WAAW,CAACV,GAAD,CAAX,CAEA,GAAMW,CAAAA,OAAO,CAAGN,UAAU,CAAG,GAAH,CAAS,CAAnC,CACA,GAAMO,CAAAA,cAAc,CAAG,CAAED,OAAO,CAAPA,OAAF,CAAvB,CAEA,MAAOpB,CAAAA,KAAK,CAACsB,QAAN,CAAeC,GAAf,CAAmBf,QAAnB,CAA6B,SAAAgB,KAAK,qBACvCxB,KAAK,CAACyB,YAAN,CAAmBD,KAAnB,CAA0B,CACxBE,YAAY,CAAEjB,GADU,CAExBkB,KAAK,CAAEN,cAFiB,CAA1B,CADuC,EAAlC,CAAP,CAMD,CAjCoB,CAArB,CAmCA,cAAehB,CAAAA,QAAf","sourcesContent":["import React, { memo, useRef } from \"react\";\nimport { useDrag, useDrop } from \"react-dnd\";\n\nconst DragItem = memo(({ id, onMoveItem, children }) => {\n  const ref = useRef(null);\n\n  const [{ isDragging }, connectDrag] = useDrag({\n    item: { id, type: \"IMG\" },\n    collect: monitor => {\n      return {\n        isDragging: monitor.isDragging()\n      };\n    }\n  });\n\n  const [, connectDrop] = useDrop({\n    accept: \"IMG\",\n    hover(hoveredOverItem) {\n      if (hoveredOverItem.id !== id) {\n        onMoveItem(hoveredOverItem.id, id);\n      }\n    }\n  });\n\n  connectDrag(ref);\n  connectDrop(ref);\n\n  const opacity = isDragging ? 0.5 : 1;\n  const containerStyle = { opacity };\n\n  return React.Children.map(children, child =>\n    React.cloneElement(child, {\n      forwardedRef: ref,\n      style: containerStyle\n    })\n  );\n});\n\nexport default DragItem;\n"]},"metadata":{},"sourceType":"module"}