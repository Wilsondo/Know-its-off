{"version":3,"sources":["axios.js","components/logs.js","components/navbar.js","components/default.js","components/login.js","components/signup.js","components/logout.js","components/grid/DragItem.js","components/grid/Grid.js","components/grid/GridContext.js","components/tile.js","components/grid/GridApp.js","components/home.js","components/editDevice.js","components/editUser.js","components/addDevice.js","components/device.js","App.js","index.js"],"names":["axiosBaseURL","Axios","create","baseURL","batteryLogs","props","state","battery","device_battery","timestamp_time","error","loading","dbString","this","match","params","handle","get","then","result","setState","data","className","size","color","redirect","to","error_response","Fragment","map","style","display","margin","Component","MyNavbar","toggleNavbar","bind","collapsed","classOne","classTwo","onClick","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","Default","Login","doLogin","event","postLoading","post","email","password","flag","history","push","catch","preventDefault","handleChange","target","name","value","onChange","aria-describedby","placeholder","Signup","doSignup","alert","passwordConf","Logout","DragItem","memo","onMoveItem","children","ref","useRef","useDrag","item","collect","monitor","isDragging","connectDrag","useDrop","accept","hover","hoveredOverItem","connectDrop","containerStyle","opacity","React","Children","child","cloneElement","forwardedRef","Grid","styled","div","GridItemWrapper","GridItem","moveElement","array","index","offset","oldIndex","newIndex","length","splice","move","GridContext","createContext","items","GridProvider","setItems","Cookies","i","j","items_copy","slice","cookie_idList","JSON","parse","myArr","moveItem","sourceId","destinationId","sourceIndex","findIndex","destinationIndex","idList","set","Provider","Tile","device_id","appliance_name","device_state","timestamp","statusText","background","Card","bg","Header","Title","Body","Text","GridApp","useContext","Home","count_dev_state","arr","x","app_result","num_on","context","console","log","response","contextType","EditUser","toChange","handleAccordion","ex1","expanded1","ex2","expanded2","ex3","expanded3","doEmail","loading1","undefined","current","patch","changeLoad","doPass","loading2","oldPass","pass","checkPass","status","delete","loading3","window","confirm","deleteconfirm","Accordion","expanded","AccordionSummary","expandIcon","AccordionDetails","addDevice","postData","allDevices","idVerify","String","myDevice","revealDetails","handleChangeDevice","editDevice","updateDevice","idCheck","Devices","deleteDevice","data-placement","title","NavRoute","exact","path","component","render","App","Device","Logs","ReactDOM","DndProvider","backend","TouchBackend","options","enableMouseEvents","document","getElementById"],"mappings":"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","file":"static/js/main.d4ac782d.chunk.js","sourcesContent":["/****************************************************************************************************\r\n * FILENAME: axios.js\r\n * DESCRIPTION: Create an importable variable that can be used to allow for API access via Axios\r\n * AUTHOR(S): Capstone 2020-2021 (Tyler Titsworth)\r\n * NOTES: Change the baseURL to match whatever a user would put as their URL to access. When using \r\n * localhost, the port is dependant on what service hosts the frontend.\r\n ****************************************************************************************************/\r\nimport Axios from 'axios';\r\nconst axiosBaseURL = Axios.create({\r\n    // 3000 for react-scripts (yarn start-dev)\r\n    // 5000 for /build (yarn start)\r\n\t//baseURL:'https://c12074cf1600.ngrok.io/api',\r\n    baseURL:'https://know-its-off.com/api/',\r\n});\r\nexport default axiosBaseURL\r\n","/****************************************************************************************************\r\n * FILENAME: logs.js\r\n * DESCRIPTION: Display Battery logs that a device has and allow for users to download a CSV of the \r\n * battery data.\r\n * AUTHOR(S): Capstone 2020-2021 (Tyler Titsworth)\r\n * NOTES: Links from device.js\r\n ****************************************************************************************************/\r\nimport React, {Component} from 'react';\r\nimport { Redirect} from 'react-router-dom';\r\nimport {CircleSpinner} from 'react-spinners-kit';\r\nimport axiosBaseURL from '../axios.js';\r\nimport CsvDownload from 'react-json-to-csv';\r\n\r\nexport default class batteryLogs extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\t\r\n\t\t\tbattery: [\r\n                {device_battery: 100.0, timestamp_time: \"\"}\r\n            ],\r\n\t\terror: false,\r\n\t\tloading: true\r\n\t\t}\r\n\t};\r\n\tcomponentDidMount() {\r\n\t\tconst handle = this.props.match.params.handle;\r\n\t\tvar dbString = \"/batteryLogs/\" + handle\r\n\t\taxiosBaseURL.get(dbString) // retrieve battery logs data using the API\r\n\t\t.then((result) => {\r\n\t\t\tthis.setState({ \r\n\t\t\t\tbattery: result.data\r\n\t\t\t});\r\n\t\t\tthis.setState({loading: false})\r\n\t\t})\r\n\t};\r\n\trender() {\r\n\t\tif(this.state.loading) {\r\n\t\t\treturn (\r\n\t\t\t  <div className=\"d-flex justify-content-center m-5\">\r\n\t\t\t\t <CircleSpinner size={60} color=\"#686769\" loading={this.state.loading} />\r\n\t\t\t  </div>)\r\n\t\t}\r\n\t\tif(this.state.error) {\r\n\t\t\tif(this.state.redirect) {return <Redirect to={this.state.redirect} />}\r\n\t\t\treturn(<div><h3>Error 404, Page Not Found</h3><h3>{this.state.error_response}</h3></div>)\r\n\t\t }\r\n\t\treturn(\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t{this.state.battery.map((battery) => ( // Map each element in the battery array as an individual card object\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t   // These card objects have an individual device battery and timestamp time\r\n\t\t\t\t\t<div className=\"col mt-3 text-light\">\r\n\t\t\t\t\t<div className=\"card bg-dark\">\r\n\t\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t\t\t<p className=\"card-text\">Battery: {battery.device_battery}%</p>\r\n\t\t\t\t\t\t\t\t<p className=\"card-text\">Last Seen: {battery.timestamp_time}</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t// CSVDownload is a button object that allows for data to be converted to said format\r\n\t\t\t\t// Do not mess with spacing, it's perfect\r\n\t\t\t\t))}\r\n\t\t\t\t<CsvDownload style={{display: \"flex\", margin: \"1em\"}} className=\"btn btn-info float-right footer affix\" data={this.state.battery}>Download CSV</CsvDownload>\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t}\r\n}\r\n","/****************************************************************************************************\n * FILENAME: navbar.js\n * DESCRIPTION: Displays a navigation bar within the header of a page that uses the NavRoute identifier\n * Features a collapsable mode and variable link definitions\n * AUTHOR(S): Capstone 2020-2021 (Tyler Titsworth)\n * NOTES: Spacing is finicky, add elements but don't take away without risk of breaking spacing\n ****************************************************************************************************/\nimport React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\n\nexport default class MyNavbar extends Component {\n/* Toggle taken from https://www.bennettnotes.com/bootstrap-navbar-collapse-reactjs/ */\n   constructor(props){\n      super(props);\n      this.toggleNavbar = this.toggleNavbar.bind(this);\n      this.state ={\n         collapsed: true\n      };\n   }\n   // Basic toggle function\n   toggleNavbar() {\n      this.setState({ collapsed: !this.state.collapsed });\n   }\n\n\trender(){\n      const collapsed = this.state.collapsed;\n      // There are two types of navbar depending on the width of a given page\n      // The state of the navbar is determined by the collapsed variable, which is logically composed by a ternary operator\n      const classOne = collapsed ? 'collapse navbar-collapse justify-content-between' : 'collapse nav-bar collapse show justify-content-between';\n      const classTwo = collapsed ? 'navbar-toggler navbar-toggler-right collapsed' : 'navbar-toggler navbar-toggler-right';\n      // To add new Link identifiers use lines 40-44 as an example\n\t\treturn(\n<nav className=\"navbar bg-primary navbar-expand-lg navbar-dark\">\n  <Link to=\"/home\" className=\"navbar-brand\">Know It's Off</Link>\n  <button onClick={this.toggleNavbar} className={`${classTwo}`} type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n    <span className=\"navbar-toggler-icon\"></span>\n  </button>\n  <div className={`${classOne}`} id=\"navbarNavAltMarkup\">\n    <div className=\"navbar-nav\">\n      <Link to=\"/device/new\" className=\"nav-item nav-link text-light\">New Device</Link>\n      <Link to=\"/user/edit\" className=\"nav-item nav-link text-light\">Edit User</Link>\n    </div>\n    <div className=\"navbar-nav\">\n         <Link to=\"/logout\" className=\"nav-item nav-link text-light\">Logout</Link>\n    </div>\n   </div>\n</nav>\n\t\t)\n\t}\n}\n\n","/****************************************************************************************************\n * FILENAME: default.js\n * DESCRIPTION: 404 Error page\n * AUTHOR(S): Capstone 2019-2020\n * NOTES: \n ****************************************************************************************************/\nimport React, {Component} from 'react'\n\nexport default class Default extends Component {\n\trender(){\n\t\treturn(\n\t\t\t<div>\n\t\t\t\t<h3>404 Error: Page not found</h3>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\n","/****************************************************************************************************\n * FILENAME: login.js\n * DESCRIPTION: Provide User Login through a page with a simple form\n * AUTHOR(S): Capstone 2020-2021 (Tyler Titsworth)\n * NOTES: Consider this to be the starting point in the navigation screen tree\n ****************************************************************************************************/\nimport React, {Component} from 'react'\nimport {CircleSpinner} from 'react-spinners-kit' \nimport {Link} from 'react-router-dom';\nimport axiosBaseURL from '../axios.js'\n\nexport default class Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n\t    loading: false,\n\t    email: \"\",\n\t    password: \"\",\n      error: false,\n      flag: false, \n\t    postLoading: false, \n    };\n  }\n  // The Submit button function checks the credentials given in the form\n  doLogin = (event) => {\n\t  this.setState({postLoading:true});\n\t  axiosBaseURL.post('/login', {email: this.state.email, password: this.state.password})\n\t  .then( // if the credentials were successful redirect the user to the home page\n\t\t  (result) =>{this.setState({postLoading: false, flag:false}); \n      this.props.history.push(\"/home\"); \n    })\n    .catch((error)=>{this.setState({postLoading:false, flag:true}); // if they failed set the error flag bit and prevent refreshing\n    })\n\t  event.preventDefault();\n  };\n  // Function to handle form changes and set the value field in a given form identifier\n  handleChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  };\n  // Render a container with an email, password form fields with proper labels. Contains a submission button and registration button that leads to signup.js\n\trender(){\n\t\tif(this.state.loading){\n      \t\t\treturn (<div className=\"d-flex justify-content-center m-5\"><CircleSpinner size={60} color=\"#686769\" loading={this.state.loading} /></div>)\n    }\n    const {flag} = this.state;\n\t\treturn(\n<div className=\"mt-5 mb-5 container bg-dark border\">\n<div className=\"row justify-content-md-center text-light mt-5\">\n<h1>Log In to Know It's Off</h1>\n</div>\n<div className=\"row justify-content-md-center text-light mb-5\">\n<form>\n  <div className=\"form-group\">\n    {flag && ( // This message only appears when the API post request to /login fails\n      <div className=\"text-danger\">*Email or password incorrect</div>\n    )}\n    <label>Email address</label>\n    <input name=\"email\" type=\"email\" className=\"form-control\" value={this.state.email} onChange={this.handleChange} id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Enter email\" />\n  </div>\n  <div className=\"form-group\">\n    <label>Password</label>\n    <input name=\"password\" type=\"password\" onChange={this.handleChange} value={this.state.password} className=\"form-control\" id=\"exampleInputPassword1\" placeholder=\"Password\" />\n  </div>\n  <button onClick={this.doLogin} className=\"btn btn-primary\">Submit<CircleSpinner size={20} color=\"#3BBCE5\" loading={this.state.postLoading} /></button>\n  <Link id=\"signupHelp\" to=\"/signup\" className=\"form-text text-muted\">Register New User</Link>\n</form>\n</div>\n</div>\n\t\t)\n\t}\n\t\n\n}\n\n","/****************************************************************************************************\n * FILENAME: signup.js\n * DESCRIPTION: Provide User Registration through a page with a simple form\n * AUTHOR(S): Capstone 2020-2021 (Tyler Titsworth)\n * NOTES: Links from login.js\n ****************************************************************************************************/\nimport React, {Component} from 'react'\nimport {CircleSpinner} from 'react-spinners-kit' \nimport axiosBaseURL from '../axios.js'\n\nexport default class Signup extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: false,\n      email: \"\",\n      password: \"\",\n      error: false,\n      postLoading: false\n    };\n  }\n  // The Submit button function attempts to post a new user with the given form email and password to the API\n  // If the axios function call is success, redirect the user to login.js\n  // If the axios function call fails tell the user and prevent the page from refreshing\n  doSignup = (event) => {\n\t  this.setState({postLoading:true});\n\t    axiosBaseURL.post('/user', {email: this.state.email, password: this.state.password})\n\t  .then((result) =>{this.setState({postLoading: false}); \n      this.props.history.push(\"/login\"); \n    })\n    .catch((error)=>{this.setState({postLoading:false});\n      alert(\"Invalid email and password\");\n\t  event.preventDefault();\n    })\n  };\n  // Page handler function will allow a form field to change its assigned value parameter\n  handleChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  };\n  // Render form content\n\trender(){\n\t\tif(this.state.loading){\n      return (<div className=\"d-flex justify-content-center m-5\"><CircleSpinner size={60} color=\"#686769\" loading={this.state.loading} /></div>)\n\t\t}\n\t\treturn( // Create a container that houses the form, the header is just the title\n            // Each field changes a state field using the handleChange function, their form control format is determined by the 'type' identifier\n            // The submit button executes the API call\n<div className=\"mt-5 mb-5 container bg-dark border\">\n<div className=\"row justify-content-md-center mt-5\">\n<h1>Sign up to Know It's Off</h1>\n</div>\n<div className=\"row justify-content-md-center mb-5\">\n<form>\n  <div className=\"form-group\">\n    <label>Email address</label>\n    <input name=\"email\" type=\"email\" className=\"form-control\" value={this.state.email} onChange={this.handleChange} id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Enter email\" />\n  </div>\n  <div className=\"form-group\">\n    <label>Password</label>\n    <input name=\"password\" type=\"password\" onChange={this.handleChange} value={this.state.password} className=\"form-control\" id=\"exampleInputPassword1\" placeholder=\"Password\" />\n  </div>\n  <div className=\"form-group\">\n    <label>Confirm Password</label>\n    <input name=\"passwordConf\" type=\"password\" onChange={this.handleChange} value={this.state.passwordConf} className=\"form-control\" id=\"exampleInputPassword2\" placeholder=\"Password\" />\n  </div>\n  <button onClick={this.doSignup} className=\"btn btn-primary\">Submit<CircleSpinner size={20} color=\"#3BBCE5\" loading={this.state.postLoading} /></button>\n</form>\n</div>\n</div>\n\t\t)\n\t}\n\t\n\n}\n\n","/****************************************************************************************************\n * FILENAME: logout.js\n * DESCRIPTION: File serves as a redirection path to change the user login state\n * AUTHOR(S): Capstone 2020-2021 (Tyler Titsworth)\n * NOTES: \n ****************************************************************************************************/\nimport React, {Component} from 'react'\nimport { Redirect } from 'react-router-dom';\nimport axiosBaseURL from '../axios.js'\n\n\nexport default class Logout extends Component {\n   constructor(props) {\n      super(props);\n      this.state = {\n         error: false,\n         redirect: \"/\"\n      };\n   }\n    \n   render(){\n        if(this.state.error){\n            return(<div className=\"m-5 text-light\"><h3>Error 404, Page Not Found</h3></div>)\n        }\n      axiosBaseURL.get('/logout') // Remove user login status\n      .then(() => {\n         this.props.history.push('/login'); // Redirect to login page\n      })\n      .catch(() => { // If for whatever reason this fails redirect to login anways\n         return(   \n            <Redirect to='/' />\n         )\n      })\n      return(   \n         <Redirect to='/' />\n      )\n    }\n}","/****************************************************************************************************\n * FILENAME: DragItem.js\n * DESCRIPTION: Enable Tile dragging within the Drag-n-Drop Grid Context\n * AUTHOR(S): Capstone 2019-2020\n * NOTES: I wish it had comments so I knew what was going on. It looks like it enables drag properties, \n * but it's not clear how to customize this to increase clarity in dnd mechanics\n ****************************************************************************************************/\nimport React, { memo, useRef } from \"react\";\nimport { useDrag, useDrop } from \"react-dnd\";\n\nconst DragItem = memo(({ id, onMoveItem, children }) => {\n  const ref = useRef(null);\n\n  const [{ isDragging }, connectDrag] = useDrag({\n    item: { id, type: \"IMG\" },\n    collect: monitor => {\n      return {\n        isDragging: monitor.isDragging()\n      };\n    }\n  });\n\n  const [, connectDrop] = useDrop({\n    accept: \"IMG\",\n    hover(hoveredOverItem) {\n      if (hoveredOverItem.id !== id) {\n        onMoveItem(hoveredOverItem.id, id);\n      }\n    }\n  });\n\n  connectDrag(ref);\n  connectDrop(ref);\n\n  const opacity = isDragging ? 0.5 : 1;\n  const containerStyle = { opacity };\n\n  return React.Children.map(children, child =>\n    React.cloneElement(child, {\n      forwardedRef: ref,\n      style: containerStyle\n    })\n  );\n});\n\nexport default DragItem;\n","/****************************************************************************************************\n * FILENAME: Grid.jss\n * DESCRIPTION: Declares parameters of grid for styling purposes\n * AUTHOR(S): Capstone 2019-2020\n * NOTES: This is depreciated\n ****************************************************************************************************/\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nexport const Grid = styled.div`\n  width: 100%;\n  padding: 0px 10px 0px 10px;\n  display: flex;\n  justify-content: start;\n  flex-wrap: wrap;\n`;\n\n/*export const GridImage = styled.div`\n  flex-grow: 1;\n  border: 1px solid white;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-image: ${props => `url(\"${props.src}\")`};\n  background-size: cover;\n  background-position: 50%;\n`;*/\n\nconst GridItemWrapper = styled.div`\n  flex: 0 0 25%;\n  flex-grow: 0.75;\n  min-width: 250px;\n  max-width: 500px;\n  max-height: 270px;\n  display: flex;\n  justify-content: center;\n  align-items: stretch;\n  box-sizing: border-box;\n  :before {\n    content: \"\";\n    display: table;\n    padding-top: 100%;\n  }\n`;\n\nexport const GridItem = ({ forwardedRef, ...props }) => (\n  <GridItemWrapper ref={forwardedRef} {...props} />\n);\n","/****************************************************************************************************\n * FILENAME: GridContext.js\n * DESCRIPTION: Create a Grid Context\n * AUTHOR(S): Capstone 2019-2020\n * NOTES: This is depreciated, and very messy. I wish I knew what was going on. We wanted to \n * replace this with just a library that does it for us\n ****************************************************************************************************/\nimport React, { Component, createContext } from \"react\";\nimport Cookies from 'js-cookie';\n\n//import { GridContextProvider } from \"react-grid-dnd\";\n\n// Helper functions\n\nfunction move(array, oldIndex, newIndex) {\n  if (newIndex >= array.length) {\n    newIndex = array.length - 1;\n  }\n  array.splice(newIndex, 0, array.splice(oldIndex, 1)[0]);\n  return array;\n}\n\nfunction moveElement(array, index, offset) {\n  const newIndex = index + offset;\n\n  return move(array, index, newIndex);\n}\n\n/*function findIndexofItems(i, items_copy, cookie_items) {\n  return items_copy.findIndex(item => item.id === cookie_items[i].id) \n}*/\n\n// Context\n\nconst GridContext = createContext({ items: [] });\n\nexport class GridProvider extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: [],\n      moveItem: this.moveItem,\n      setItems: this.setItems\n    };\n  }\n\n  render() {\n    return (\n      <GridContext.Provider value={this.state}>\n        {this.props.children}\n      </GridContext.Provider>\n    );\n  }\n\n  setItems = items => {\n    if(!Cookies.get('idList') && items){\n      this.setState({items})\n    }\n    else{\n      var i, j\n      var items_copy = items.slice()\n      //retreive cookie\n      var cookie_idList = JSON.parse(Cookies.get('idList'));\n      var myArr = []\n      //reorder items based on cookie_idList\n      for(i in cookie_idList){\n         for(j in items_copy){\n            const itemID = items_copy[j].id\n            const cookieID = cookie_idList[i]\n            if(itemID === cookieID){\n               myArr.push(items_copy[j])\n               items_copy.splice(j,1)\n            }\n          }\n        }\n      }\n      for(i in items_copy){myArr.push(items_copy[i])}\n      if(myArr){\n         this.setState({items: myArr})\n      }\n  };\n\n  moveItem = (sourceId, destinationId) => {\n    const sourceIndex = this.state.items.findIndex(\n      item => item.id === sourceId\n    );\n    const destinationIndex = this.state.items.findIndex(\n      item => item.id === destinationId\n    );\n\n    // If source/destination is unknown, do nothing.\n    if (sourceId === -1 || destinationId === -1) {\n      return;\n    }\n\n    const offset = destinationIndex - sourceIndex;\n\n    this.setState(state => ({\n      items: moveElement(state.items, sourceIndex, offset)\n    }));\n\n    //store items in cookie\n    var i\n    var idList = []\n    for(i in this.state.items){\n       idList.push(this.state.items[i].id)\n    }\n    Cookies.set('idList', idList)\n  };\n}\n\nexport default GridContext;\n","/****************************************************************************************************\n * FILENAME: tile.js\n * DESCRIPTION: Provided device information in home.js, display a single tile with that device's \n * information.\n * AUTHOR(S): Capstone 2020-2021 (Tyler Titsworth)\n * NOTES: \n ****************************************************************************************************/\nimport React, {Component} from 'react';\nimport Card from 'react-bootstrap/Card'\nimport {Link} from 'react-router-dom';\nimport {CircleSpinner} from 'react-spinners-kit';\n\nexport default class Tile extends Component {\n   // These state components rely on item property assignments declared in ./grid/GridApp\n   // Those assignments are always passed from an array generated in ./home.js\n   state={\n      device_id: this.props.device_id,\n      appliance_name: this.props.appliance_name,\n      device_state: this.props.state,\n      // Notice the battery is missing from this implementation, to see the battery one must travel to device.js\n      timestamp: this.props.timestamp, \n      statusText: \"OFF\",\n      background: \"light\",\n      loading: true,\n   }\n   // On page load, determine device state and change the background and status text accordingly\n   componentDidMount() {\n      if(this.props.state === 1){\n         this.setState({\n            background: \"success\", // This state object is used to determine a bootstrap entity, so success is just a color\n            statusText: \"ON\"\n         })\n      }\n      else if(this.props.state === 2){ // This state describes a device that hasn't had a state written to it yet, \n                                       //which means the addDevice.js file was the last to write to this object\n         this.setState({\n            background: \"warning\", \n            statusText: \"UNINITIALIZED\"\n         })\n      }\n      else if(this.props.state === 0){\n         this.setState({background: \"danger\"})\n      }\n      this.setState({loading: false})\n   }\n\n   render(){\n      if(this.state.loading) {\n         return (\n            <div className=\"d-flex justify-content-center m-5\">\n               <CircleSpinner size={60} color=\"#686769\" loading={this.state.loading} />\n            </div>)\n      } // Render a card object, bootstrap styles this object\n        // The Detail Link leads to editDevice.js\n      return(\n         <Card bg={this.state.background} className=\"tile text-center col \">\n            <Card.Header>\n               <Card.Title className=\"card-title-device\">{this.state.appliance_name}</Card.Title>\n            </Card.Header>\n            <Card.Body>\n               <Card.Title className=\"card-title-status\">{this.state.statusText}</Card.Title>\n               <Card.Text className=\"card-text-device_state\">{this.state.state}</Card.Text>\n               <Card.Text className=\"card-text-timestamp\">Last Seen: {this.state.timestamp}</Card.Text>\n               <Link className=\"card-button btn btn-primary text-wrap\" to={\"/device/\"+this.state.device_id}>Details</Link>\n            </Card.Body>\n         </Card>\n      )\n   }\n}\n","/****************************************************************************************************\n * FILENAME: GridApp.js\n * DESCRIPTION: Generate a grid instance and map tiles for each device item\n * AUTHOR(S): Capstone 2019-2020\n * NOTES: All I did was change the item keys\n ****************************************************************************************************/\nimport React, { useContext} from \"react\";\nimport DragItem from \"./DragItem\";\nimport { Grid, GridItem } from \"./Grid\";\nimport GridContext from \"./GridContext\";\nimport Tile from \"../tile.js\";\n\nfunction GridApp(props) {\n  const {items, moveItem} = useContext(GridContext);\n\n  return (\n    <div className=\"GridApp\">\n      <Grid>\n        {items.map(item => (\n          <DragItem key={item.id} id={item.id} onMoveItem={moveItem}>\n            <GridItem>\n              <Tile key={item.id} device_id={item.id} device_battery={item.device_battery} appliance_name={item.appliance_name} state={item.device_state} timestamp={item.timestamp} />\n            </GridItem>\n          </DragItem>\n        ))}\n      </Grid>\n    </div>\n  );\n}\n\nexport default GridApp;\n","/****************************************************************************************************\n * FILENAME: home.js\n * DESCRIPTION: Home page for Know It's Off, runs grid application to host tile.js objects along with\n * navbar\n * AUTHOR(S): Capstone 2020-2021 (Tyler Titsworth)\n * NOTES: Page loads from top down, navbar before page mounting, grid context after page mounting\n ****************************************************************************************************/\nimport React, {Component} from 'react';\nimport axiosBaseURL from '../axios.js';\nimport {Redirect} from 'react-router-dom';\nimport {CircleSpinner} from 'react-spinners-kit';\nimport GridApp from './grid/GridApp';\nimport GridContext from './grid/GridContext';\n\nexport default class Home extends Component {\n   static contextType = GridContext\n   constructor(props) {\n      super(props);\n      this.state = {\n         loading: true,\n         error: false,\n         redirect: null,\n      };\n   };\n   // short function that quickly calculates the number of 'on' devices\n   count_dev_state = (arr) => {\n      var result = 0;\n      for(var x = 0; arr.length > x; x++){\n         if(arr[x].device_state === 1){\n            result++;\n         }\n      }\n      return result;\n   }\n   // Upon loading the page attempt an API call to retrieve all user devices\n   componentDidMount() {\n      axiosBaseURL.get(\"/devices\") \n         .then( (app_result) => {\n            this.setState({\n               num_on: this.count_dev_state(app_result.data)\n            })\n            const context = this.context // generate a context\n            context.setItems(app_result.data) // set the items in the context equal to the device data \n                                              // retrieved from the API call\n            this.setState({loading: false})\n         })\n         .catch( (error) => {\n            this.setState({loading: false, error: true});\n            console.log(\"We ran into an issue with retrieving your device data, error: \", error.response)\n         })\n   }\n\n   render(){ // Create centered context with Page Title and quick appliance reading\n             // GridApp will load tile.js objects after passing through ./grid files\n      if(this.state.loading) {\n         return (\n            <div className=\"d-flex justify-content-center m-5\">\n               <CircleSpinner size={60} color=\"#686769\" loading={this.state.loading} />\n            </div>)\n      }\n      if(this.state.error) {\n         if(this.state.redirect) {return <Redirect to={this.state.redirect} />}\n         return(<div><h3>Error 404, Page Not Found</h3><h3>{this.state.error_response}</h3></div>)\n      }\n      return(\n         <div>\n            <div className=\"row m-3 text-light\">\n            <div className=\"col\">\n               <h1 className=\"text-center\">Home</h1>\n            </div>\n         </div>\n         <div className=\"row m-3 text-light\">\n            <div className=\"col\">\n               <h6 className=\"text-muted text-center\">\n                  {this.state.num_on} of your appliances are on.\n               </h6>\n            </div>\n         </div>\n         <GridApp/>     \n      </div>\n      )\n   }\n}\n","/****************************************************************************************************\n * FILENAME: editDevice.js\n * DESCRIPTION: Change the name or device ID of a given device\n * AUTHOR(S): Capstone 2020-2021 (Tyler Titsworth)\n * NOTES: Links from device.js\n ****************************************************************************************************/\nimport React, {Component} from 'react';\nimport {CircleSpinner} from 'react-spinners-kit' ;\nimport axiosBaseURL from '../axios.js';\nimport { Redirect } from 'react-router-dom';\n\nvar dbString // expand scope of API URL\nexport default class editDevice extends Component {\n   constructor(props) {\n     super(props);\n     this.state = {\n         myDevice: {\n            appliance_name: \"My Appliance\",\n            //device_state: 1, \n            //device_battery: 100.0,\n            //timestamp: \"2019-04-30T08:59:00.000Z\",\n            id: 1,\n         },\n         allDevices: [], // array to store query of all devices within database\n                         // this is not good with scale\n\t      loading: true,\n\t      error: false,\n         idCheck: false,\n      }\n   };\n   // Upon loading the page get information about the specific device\n   componentDidMount() {\n      const handle = this.props.match.params.handle;\n\t\tdbString = \"/device/\" + handle\n\t\taxiosBaseURL.get(dbString)\n\t\t.then((result) => {\n\t\t\tthis.setState({ \n\t\t\t\tmyDevice: {\n\t\t\t\t\tid: result.data.id, \n\t\t\t\t\tappliance_name: result.data.appliance_name\n            },\n            loading: false\n\t\t\t});\n      })\n      .catch( (error) => {\n         this.setState({loading: false, error: true});\n         if(error.response){\n            this.setState({error_response: error.response.data});\n            if(error.response.data === \"not authorized\"){ this.setState({redirect: dbString}) }\n            else if (error.response.data){console.log(error.response)}\n         }\n      })\n   }\n   // Submit button will attempt to change both the device id and appliance name\n   // Information stored in the myDevice state variable will be changed by the form fields.\n   // Appliance name fields aren't unique, so we don't test for any special validity, the \n   // API will do that for us\n   updateDevice = (event) => {\n      this.setState({loading:true});\n      axiosBaseURL.get(\"/allDevices\") // API call to get all devices into array\n      .then((result) => {\n         this.setState({\n            allDevices: result.data\n         })\n         var i = 0 // what is this c?\n         for(i in this.state.allDevices) { // loop through all devices\n            // Both values need to be typecasted because javascript is %&$*@!# terrible\n            if(String(this.state.allDevices[i].id) === String(this.state.myDevice.id)) { // compare ids\n               this.setState({idCheck:true});  // if they match set to prevent patching\n            }\n         }\n         if(this.state.idCheck) { \n            this.setState({loading:false}) // error message\n            alert(\"Please enter a valid Device ID!\");\n         }\n         else {\n            axiosBaseURL.patch(dbString, this.state.myDevice) // API call to patch the device with new, overwritten information\n            .then((result) => { // upon success\n               this.setState({loading: false});\n                  alert(\"Device Updated Successfully!\");\n                  this.props.history.push('/home'); // redirect the user back to the home page after success\n            })\n            .catch((error)=>{ // If the previous check fails for a matching device id fails it will still fail here\n                              // because the patch API call will fail\n               this.setState({loading:false})\n               alert(\"Please enter a valid Device ID!\");\n            })\n         }\n         event.preventDefault(); // always prevent refreshing\n      })\n      .catch( (error) => {\n         this.setState({loading: false, error: true});\n         if(error.response){\n            this.setState({error_response: error.response.data});\n            if(error.response.data === \"not authorized\"){ this.setState({redirect: dbString}) }\n            else if (error.response.data){console.log(error.response)}\n         }\n      })\n   };\n   // Handler function to let the form fields change the information stored in myDevice\n   handleChangeDevice = (event) => { \n      this.setState({\n         myDevice : {...this.state.myDevice, [event.target.name]: event.target.value}\n      });\n   };\n   // Render simple form fields with a submit button\n\trender(){\n\t\tif(this.state.error) {\n         if(this.state.redirect) {return <Redirect to={this.state.redirect} />}\n         return(<div className=\"m-5 text-light\"><h3>Error 404, Page Not Found</h3></div>) \n      }\n\t\tif(this.state.loading){\n         return (\n            <div className=\"d-flex justify-content-center m-5\">\n               <CircleSpinner size={60} color=\"#686769\" loading={this.state.loading} />\n            </div>)\n\t\t}\n\t\treturn(\n<div className=\"m-5 text-light\">\n<h3>Edit Device</h3>\n<form>\n   <div className=\"form-group\">\n      <label>Appliance Name</label>\n      <input className=\"form-control text-dark\" name=\"appliance_name\" id=\"inputApplianceName\" aria-describedby=\"nameHelp\" onChange={this.handleChangeDevice} value={this.state.myDevice.appliance_name} />\n      <label>Device ID</label>\n      <input className=\"form-control text-dark\" name=\"id\" id=\"inputDeviceId\" aria-describedby=\"nameHelp\" onChange={this.handleChangeDevice} value={this.state.myDevice.id} />\n   </div>\n\n   <button onClick={this.updateDevice} className=\"btn btn-success\">Update<CircleSpinner size={20} color=\"#3BBCE5\" loading={this.state.loading} /></button>\n</form>\n</div>\n\t\t)\n\t}\n}\n\n","/****************************************************************************************************\r\n * FILENAME: editUser.js\r\n * DESCRIPTION: Accordian of options to change user settings or remove user\r\n * AUTHOR(S): Capstone 2020-2021 (Tyler Titsworth)\r\n * NOTES: Individual loading/expansion state variables can't be optimized because of the nature of js.\r\n * Accordian HTML is based on the @material-ui docs\r\n * Links from navbar.js (index.js/app.js)\r\n ****************************************************************************************************/\r\nimport React, { Component } from 'react'\r\nimport {CircleSpinner} from 'react-spinners-kit'\r\nimport axiosBaseURL from '../axios.js'\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\r\nimport { Accordion, AccordionDetails, AccordionSummary} from '@material-ui/core/'\r\n\r\nexport default class EditUser extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n         // current user information\r\n         current: {\r\n            email: \"\",\r\n            password: \"\",\r\n         },\r\n         // variables that will be changed or used to confirm information\r\n         toChange: {\r\n            email: \"\",\r\n            oldPass: \"\",\r\n            pass: \"\",\r\n            checkPass: \"\",\r\n            deleteconfirm: \"\"\r\n         },\r\n         loading: false, // this loading is for the page itself\r\n         error: false,\r\n         // each loading is for a different accordian section button, top->bottom\r\n         loading1: false, \r\n         loading2: false, \r\n         loading3: false, \r\n         // used to capture the state of the individual accordian sections\r\n         expanded1: false,\r\n         expanded2: false,\r\n         expanded3: false\r\n      };\r\n   }\r\n   // Upon loading the page, populate user settings into 'current'\r\n   componentDidMount() {\r\n      axiosBaseURL.get(\"/user/current\")\r\n      .then((result) => {\r\n         this.setState({\r\n            loading: false,\r\n            current: {\r\n               email: result.data.email,\r\n               password: result.data.password\r\n            }\r\n         });\r\n      })\r\n      .catch((error) => {\r\n         this.setState({loading: false, error: true});\r\n         if(error.response){\r\n            this.setState({error_response: error.response.status});\r\n         }\r\n      })\r\n   }\r\n   // function to handle form changes with target variables, only works with the toChange associations\r\n   // so we can't change anything outside of that state context\r\n   handleChange = (event) => {\r\n        this.setState({\r\n           toChange: {...this.state.toChange,[event.target.name]: event.target.value}\r\n        });\r\n   };\r\n   // function to handle the expansion and compression of the accordian based on the id of the identifier\r\n   handleAccordion = (id) => (event) => {\r\n      switch(id) {\r\n         case 1:\r\n            var ex1 = !this.state.expanded1\r\n            this.setState({\r\n               expanded1: ex1\r\n             });\r\n            break;\r\n         case 2:\r\n            var ex2 = !this.state.expanded2\r\n            this.setState({\r\n               expanded2: ex2\r\n             });\r\n            break;\r\n         case 3:\r\n            var ex3 = !this.state.expanded3\r\n            this.setState({\r\n               expanded3: ex3\r\n             });\r\n            break;\r\n         default: \r\n            break;\r\n      }\r\n   };\r\n   // Email submit button, will attempt to change the email of the user to information present in the form field\r\n   doEmail = (event) => {\r\n      this.setState({loading1 : true});\r\n      // check if the form field is empty, or if the email to change it the same as the current email\r\n      if(this.state.toChange.email === undefined || this.state.toChange.email === this.state.current.email) {\r\n         alert(\"Please enter valid email into field\"); // error message, prevent refreshing\r\n         this.setState({loading1: false});\r\n         event.preventDefault();\r\n      }\r\n      else {\r\n         axiosBaseURL.patch('/user/current', {email: this.state.toChange.email}) // patch the user\r\n         .then((result) => {\r\n            this.setState({loading1: false})\r\n            alert(\"User Information Successfully Updated!\"); // allow page refreshing\r\n         })\r\n         .catch((error) => {\r\n            this.setState({changeLoad: false, error: true, error_response: error.response.data})\r\n         });\r\n      }\r\n   }\r\n   // Password submit button, will attempt to change user password information based on a few form fields\r\n   doPass = (event) => {\r\n      this.setState({loading2 : true});\r\n      axiosBaseURL.post('/user/check/' + this.state.toChange.oldPass) // check if the 'current password' field matches \r\n                                                                      // since passwords are always given as hash we use an API call\r\n                                                                      // this will reveal the password of a user who attempts to change it\r\n      .then(response => {\r\n         // If the password and confirm fields match AND the status response code of the password checking is valid\r\n         if(this.state.toChange.pass === this.state.toChange.checkPass && response.status === 204) {\r\n            axiosBaseURL.patch('/user/current', {password: this.state.toChange.pass})\r\n            .then((result) => {\r\n               this.setState({loading2: false})\r\n               alert(\"User Information Successfully Updated!\"); // allow page refreshing\r\n            })\r\n         }\r\n         else { // error message otherwise, passwords have to not match in this case\r\n            alert(\"Your Passwords do not match\");\r\n            this.setState({loading2: false});\r\n            event.preventDefault(); // prevent refreshing\r\n         }\r\n      })\r\n      .catch((error) => { // if the axios call fails, its because the API call returned a 401\r\n         this.setState({loading2: false, error_response: error.response.status})\r\n         alert(\"Your old password is incorrect\") // error message\r\n         event.preventDefault(); // prevent refreshing\r\n      })\r\n   }\r\n   // Delete Account button, will attempt to remove an account given the password of the account is correct\r\n   delete = (event) => {\r\n      this.setState({loading3 : true});\r\n      const r = window.confirm(\"Are you sure?\"); // Extra confirmation step\r\n      if(r === true) {\r\n         // Instead of using /user/check we can just try to login with the given password\r\n         axiosBaseURL.post('/login', {email: this.state.current.email, password: this.state.toChange.deleteconfirm})\r\n         .then((result) => {\r\n            axiosBaseURL.delete('/user/current') // delete API call if successful\r\n            this.setState({loading3: false})\r\n            this.props.history.push('/login'); // redirect the user to the login page\r\n         })\r\n         .catch((error) => { // if it fails the password must've been incorrect\r\n                             // There is an alternative scenario where the user isn't logged in\r\n                             // In which case they will never be able to delete the account \r\n                             // More error checking is needed to activate the error state flag\r\n            this.setState({loading3: false, error_response: error.response.status});\r\n            alert(\"Password incorrect\");\r\n         })\r\n      }\r\n      else this.setState({loading : false})\r\n      event.preventDefault(); // always prevent refreshing\r\n   }\r\n   // Render the accordian with all 3 forms\r\n   // The accordian starts collapsed and can be expanded by clicking it\r\n   render() {\r\n      if(this.state.error) {\r\n         return(<div className=\"m-5 text-light\"><h3>Error: Not Logged In</h3></div>)\r\n      }\r\n      if(this.state.loading){\r\n         return (\r\n            <div className=\"d-flex justify-content-center m-5\">\r\n               <CircleSpinner size={60} color=\"#686769\" loading={this.state.loading} />\r\n            </div>)\r\n      }\r\n      return(\r\n<div className=\"m-5 text-light\">\r\n   <Accordion className=\"bg-secondary text-light\" expanded={this.state.expanded1} onChange={this.handleAccordion(1)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />} aria-controls=\"panel1bh-content\" id=\"panel1bh-header\">\r\n         Change Email\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n         <input name=\"email\" type=\"email\" className=\"form-control\" value={this.state.toChange.email} onChange={this.handleChange} id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Enter new email address\" />\r\n         <button onClick={this.doEmail} className=\"btn btn-outline-info\">Submit<CircleSpinner size={20} color=\"#3BBCE5\" loading={this.state.loading1} /></button>\r\n      </AccordionDetails>\r\n   </Accordion>\r\n   <Accordion className=\"bg-secondary text-light\" expanded={this.state.expanded2} onChange={this.handleAccordion(2)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />} aria-controls=\"panel2bh-content\" id=\"panel2bh-header\">\r\n         Change Password\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n      <div className=\"d-grid gap-2 d-md-flex\">\r\n         <div className=\"form-group container-fluid\">\r\n               <label>Current Password</label>\r\n               <input name=\"oldPass\" type=\"password\" className=\"form-control\" value={this.state.toChange.oldPass} onChange={this.handleChange} id=\"exampleInputPassword\" aria-describedby=\"passwordHelp\" placeholder=\"Current Password\" />\r\n         </div>\r\n         <div className=\"form-group container-fluid\">\r\n            <label>New Password</label>\r\n            <input name=\"pass\" type=\"password\" className=\"form-control\" value={this.state.toChange.pass} onChange={this.handleChange} id=\"exampleInputPassword2\" aria-describedby=\"passwordHelp\" placeholder=\"New Password\" />\r\n         </div>\r\n         <div className=\"form-group container-fluid gap-2\">\r\n            <label>Confirm Password</label>\r\n            <input name=\"checkPass\" type=\"password\" className=\"form-control\" value={this.state.toChange.checkPass} onChange={this.handleChange} id=\"exampleInputPassword1\" aria-describedby=\"passwordHelp\" placeholder=\"Confirm Password\" />\r\n         </div>\r\n         <button onClick={this.doPass} className=\"btn btn-outline-info\">Submit<CircleSpinner size={20} color=\"#3BBCE5\" loading={this.state.loading2} /></button>\r\n      </div>\r\n      </AccordionDetails>\r\n   </Accordion>\r\n   <Accordion className=\"bg-secondary text-light\" expanded={this.state.expanded3} onChange={this.handleAccordion(3)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />} aria-controls=\"panel3bh-content\" id=\"panel3bh-header\">\r\n         Delete Account\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n      <input name=\"deleteconfirm\" type=\"password\" className=\"form-control\" value={this.state.toChange.deleteconfirm} onChange={this.handleChange} id=\"exampleInput5\" aria-describedby=\"emailHelp\" placeholder=\"Enter your account password\" />\r\n         <button onClick={this.delete} className=\"btn btn-outline-info\">Submit<CircleSpinner size={20} color=\"#3BBCE5\" loading={this.state.loading3} /></button>\r\n      </AccordionDetails>\r\n   </Accordion>\r\n</div>\r\n       )\r\n    }\r\n}","/****************************************************************************************************\n * FILENAME: addDevice.js\n * DESCRIPTION: Create a new device object assigned to the current user\n * AUTHOR(S): Capstone 2020-2021 (Tyler Titsworth)\n * NOTES: Links from navbar (index.js/App.js)\n ****************************************************************************************************/\nimport React, {Component} from 'react'\nimport {CircleSpinner} from 'react-spinners-kit' \nimport axiosBaseURL from '../axios.js'\nimport Tile from \"./tile.js\";\n\nexport default class addDevice extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      myDevice: {\n         id: \"0\",\n\t\t   appliance_name: \"My Appliance\",\n         device_state: 0, \n         device_battery: 100.0,\n\t   },\n      allDevices: [],\n\t   loading: true,\n\t   error: false,\n\t   postLoading: false,\n      redirect: null, \n      revealDetails: false, \n    };\n  }\n   // Submission button will attempt to create a new device\n   postData = (event) => {\n      this.setState({postLoading:true});\n      axiosBaseURL.get(\"/allDevices\") // API call to get all devices \n      .then((result) => {\n         this.setState({\n            allDevices: result.data\n         })\n      })\n      var i = 0 // what is this c?\n      let idVerify = true;\n      for(i in this.state.allDevices) // loop through all devices and compare IDs to the one given\n         if(String(this.state.myDevice.id) === String(this.state.allDevices[i].id)){ // verify the ID with string typecasting because javascript is %&#*#!^ terrible\n            idVerify = false;\n         }\n      if(idVerify || this.state.myDevice.id === \"0\"){ // Make sure the ID isn't already in use, or 0\n                                                      // an ID will be 0 if it's text or a non-integer\n         axiosBaseURL.post('/device', this.state.myDevice) // API call to create the new device\n         .then((result) => {                               // This API call handles state and battery declaration\n            this.setState({ myDevice: {...this.state.myDevice, id: result.data.id}, postLoading:false, revealDetails:true })\n            alert(\"Device Creation Successful!\");\n            this.props.history.push('/home'); // redirect the user to the homepage to view their device\n         })                                   // but not before they get a sneak previous of what their device looks like\n         .catch((error) => {\n            this.setState({loading: false})\n            alert(\"Please enter a valid Device ID!\"); // error message if invalid device ID\n         })\n      }\n      event.preventDefault(); // never refresh\n   };\n   // Handle form changes that write to the state\n   handleChangeDevice = (event) => {\n      this.setState({\n         myDevice : {...this.state.myDevice, [event.target.name]: event.target.value}\n      });\n   };\n   // Render a simple form that takes the Appliance name and Device ID with a submission button\n\trender(){\n\t\tif(this.state.error){ \n         return(<div className=\"m-5 text-light\"><h3>Error 404, Page Not Found</h3></div>) \n      }\n\t\tif(this.state.loading){\n         return (\n            <div className=\"d-flex justify-content-center m-5\">\n               <CircleSpinner size={60} color=\"#686769\" loading={this.state.loading} />\n            </div>)\n      }\n      const {revealDetails} = this.state;\n\t\treturn(\n<div className=\"m-5 text-light\">\n<h3>New Device</h3>\n<form>\n   <div className=\"form-group\">\n      <label>Appliance Name</label>\n      <input className=\"form-control text-dark\" name=\"appliance_name\" id=\"inputApplianceName\" aria-describedby=\"nameHelp\" onChange={this.handleChangeDevice} value={this.state.myDevice.appliance_name} />\n      <label>Device ID</label>\n      <input className=\"form-control text-dark\" name=\"id\" id=\"inputId\" aria-describedby=\"nameHelp\" onChange={this.handleChangeDevice} value={this.state.myDevice.id} />\n   </div>\n\n   <button onClick={this.postData} className=\"btn btn-success\">Add this device<CircleSpinner size={20} color=\"#3BBCE5\" postLoading={this.state.postLoading} /></button>\n</form>\n{revealDetails && ( // publish a tile of the current state of the device once created\n   <Tile key={this.state.myDevice.id} device_id={this.state.myDevice.id} device_battery={this.state.myDevice.device_battery} appliance_name={this.state.myDevice.appliance_name} state={this.state.myDevice.device_state} timestamp={this.state.myDevice.timestamp}></Tile>\n)}\n</div>\n\t\t)\n\t}\n}\n\n","/****************************************************************************************************\n * FILENAME: device.js\n * DESCRIPTION: Display device information, delete devices, and link elsewhere\n * AUTHOR(S): Capstone 2020-2021 (Tyler Titsworth)\n * NOTES: Links from home.js\n ****************************************************************************************************/\nimport React, {Component} from 'react';\nimport {Link, Redirect} from 'react-router-dom';\nimport {CircleSpinner} from 'react-spinners-kit';\nimport axiosBaseURL from '../axios.js';\n\nexport default class Devices extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\t\n\t\t\tmyDevice: { // As a general rule, storage of device information is categorized by a state variable like myDevice\n\t\t\t\tappliance_name: \"\",\n\t\t\t\tdevice_state: 1, \n\t\t\t\tdevice_battery: 100.0,\n\t\t\t\ttimestamp: \"\",\n\t\t\t\tid: 1\n\t\t\t},\n\t\terror: false,\n\t\tloading: true, \n\t\tredirect: '/home'\n\t\t}\n\t};\n\t// Upon loading the page retrieve device information and set them to the state variables allocated\n\tcomponentDidMount() {\n\t\tconst handle = this.props.match.params.handle;\n\t\tvar dbString = \"/device/\" + handle\n\t\taxiosBaseURL.get(dbString)\n\t\t.then((result) => {\n\t\t\tthis.setState({ \n\t\t\t\tmyDevice: {\n\t\t\t\t\tid: result.data.id, \n\t\t\t\t\tappliance_name: result.data.appliance_name, \n\t\t\t\t\tdevice_state: result.data.device_state, \n\t\t\t\t\tdevice_battery: result.data.device_battery, \n\t\t\t\t\ttimestamp: result.data.timestamp\n\t\t\t\t}\n\t\t\t});\n\t\t\tthis.setState({loading: false})\n\t\t})\n\t\t.catch( (error) => {\n\t\t\tthis.setState({error: true, loading:false});\n\t\t})\n\t};\n\t// When clicking the red 'X' in the top right corner it will attempt to delete the device\n\tdeleteDevice = (event) => {\n\t\t// Extra Confirmation step\n\t\tconst r = window.confirm(\"Do you really want to delete this, it will be permanent!\"); \n\t\tif(r === true){\n\t\t\tconst handle = this.props.match.params.handle;\n\t\t\tvar dbString = \"/device/\" + handle\n\t\t   \taxiosBaseURL.delete(dbString) // API call to remove the device\n\t\t   \t.then((result) => { // upon success\n\t\t\t  this.setState({ loading: false}); \n\t\t\t  alert(\"Device Removed Successfully!\");\n\t\t\t  this.props.history.push('/home'); // redirect the user to the homepage\n\t\t   })\n\t\t   .catch((error) => { // This only fails if the user isn't logged in \n\t\t\t\t\t\t\t   // or it was removed inbetween the time the page loaded \n\t\t\t\t\t\t\t   // and the delete button was pressed\n\t\t\t  this.setState({ error: true });\n\t\t\t  if(error.response){\n\t\t\t\t console.log(error.response)\n\t\t\t\t this.setState({error_response: error.response.data})\n\t\t\t  }\n\t\t   })\n\t\t   event.preventDefault();\n\t\t}\n\t};\n\t// Render a large card that displays all device information, with some buttons spread around\n\t// Buttons not naturally justified are floating\n\trender() {\n\t\tif(this.state.loading) {\n\t\t\treturn (\n\t\t\t  <div className=\"d-flex justify-content-center m-5\">\n\t\t\t\t <CircleSpinner size={60} color=\"#686769\" loading={this.state.loading} />\n\t\t\t  </div>)\n\t\t}\n\t\tif(this.state.error) {\n\t\t\tif(this.state.redirect) {return <Redirect to={this.state.redirect} />}\n\t\t\treturn(<div><h3>Error 404, Page Not Found</h3><h3>{this.state.error_response}</h3></div>)\n\t\t}\n\t\treturn(\n\t\t\t<div className=\"col mt-3 text-light\">\n\t\t\t\t<div className=\"card bg-dark\">\n\t\t\t\t\t<div className=\"card-body\">\n\t\t\t\t\t\t\t<button onClick={this.deleteDevice} className=\"btn btn-sm btn-danger float-right\" data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"Delete Device\">✖<CircleSpinner size={20} color=\"#3BBCE5\" loading={this.state.loading} /></button>\n\t\t\t\t\t\t\t<h5 className=\"card-title text-wrap\">{this.state.myDevice.appliance_name}</h5>\n\t\t\t\t\t\t\t<p className=\"card-title text-wrap\">Device ID: {this.state.myDevice.id}</p>\n\t\t\t\t\t\t\t<p className=\"card-text\">State: {this.state.myDevice.device_state ? 'ON' : 'OFF'}</p>\n\t\t\t\t\t\t\t<p className=\"card-text\">Battery: {this.state.myDevice.device_battery}%</p>\n\t\t\t\t\t\t\t<p className=\"card-text\">Last Seen: {this.state.myDevice.timestamp}</p>\n\t\t\t\t\t\t\t<Link to={\"/device/\" + this.state.myDevice.id + \"/edit\"} className=\"btn btn-primary text-wrap\" data-toggle=\"tooltip\" data-placement=\"bottom\" title=\"Change Device Details\">Modify</Link>\n\t\t\t\t\t\t\t<Link to={\"/device/\" + this.state.myDevice.id + \"/logs\"} className=\"btn btn-success text-wrap float-right\">Battery Logs</Link>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\n","/****************************************************************************************************\n * FILENAME: App.js\n * DESCRIPTION: Create a react router that navigates the user throughout the application\n * AUTHOR(S): Capstone 2020-2021 (Tyler Titsworth)\n * NOTES: Don't use hooks with this layout, they just don't work with the react-router-dom library.\n * CSS is Depreciated\n ****************************************************************************************************/\nimport React, { Component } from 'react';\n// This import defines the Router as a HashRouter, rather than a BrowserRouter\n// HashRouter uses browser cache to save the current and previous page data to allow for a user to navigate between them using their browser\n// A BrowserRouter uses HTML5 to cache page information, but doesn't work\n// URLs will be appended with a /#/ to signify that the hash router is working\nimport {Switch, Route, HashRouter as Router} from 'react-router-dom';\nimport './App.css';\nimport Logs from './components/logs';\nimport MyNavbar from './components/navbar';\nimport Default from './components/default';\nimport Login from './components/login';\nimport Signup from './components/signup';\nimport Logout from './components/logout'\nimport Home from './components/home';\nimport EditUser from './components/editUser';\nimport addDevice from './components/addDevice';\nimport editDevice from './components/editDevice';\nimport Device from './components/device';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n// Define NavRoute, which will instantiate a navigation bar in router elements with the 'NavRoute' definition\nconst NavRoute = ({exact, path, component: Component}) => (\n  <Route exact={exact} path={path} render={(props) => (\n    <div>\n      <MyNavbar />\n      <Component {...props}/>\n    </div>\n  )}/>\n)\nclass App extends Component { // This class will render the entire navigation tree, all users who navigate will be brought to the Login.js file\n                              // Pages that can't be handleded will be brought to the default.js file, which presents a 404\n                              // :handle methods will pass in a variable like an interface id\n  render() {\n    return (\n      <React.Fragment>\n        <Router>\n          <Switch>\n            <Route exact path=\"/\" component={Login} />\n            <Route exact path=\"/login\" component={Login} />\n            <Route exact path=\"/logout\" component={Logout} />\n            <Route exact path=\"/signup\" component={Signup} />\n            <NavRoute exact path=\"/home\" component={Home} />\n            <NavRoute exact path=\"/device/new\" component={addDevice} />\n            <NavRoute exact path=\"/device/:handle\" component={Device} />\n            <NavRoute exact path=\"/device/:handle/logs\" component={Logs} />\n            <NavRoute exact path=\"/device/:handle/edit\" component={editDevice} />\n            <NavRoute exact path=\"/user/edit\" component={EditUser} />\n            <NavRoute component={Default} />\n          </Switch>\n        </Router>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;","/****************************************************************************************************\n * FILENAME: index.js\n * DESCRIPTION: Insubstantiate the App.js file with the potential to invoke the grid and drag-n-drop \n * implementations\n * AUTHOR(S): Capstone 2019-2020\n * NOTES: This file is mandatory for react compilation. CSS is depriciated.\n ****************************************************************************************************/\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { DndProvider } from \"react-dnd\";\nimport { GridProvider } from \"./components/grid/GridContext\";\nimport { TouchBackend } from'react-dnd-touch-backend';\n\n//React DnD warns this option may be buggy, needs more testing\nconst options = {enableMouseEvents: true}\n\nReactDOM.render(\n   <DndProvider backend={TouchBackend} options={options}>\n      <GridProvider>\n         <App />\n      </GridProvider>\n   </DndProvider>,\n   document.getElementById('app')\n);"],"sourceRoot":""}