{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/mnt/e/MyReact/new_frontend/src/components/tile.js\";\nimport React, { Component } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport { Link } from 'react-router-dom';\nimport { CircularProgressbar } from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\nimport { buildStyles } from 'react-circular-progressbar';\nimport { CircleSpinner } from 'react-spinners-kit';\nimport axiosBaseURL from '../axios.js';\nexport default class Tile extends Component {\n  constructor(props) {\n    super(props);\n\n    this.deleteScout = event => {\n      //need to confirm first\n      const r = window.confirm(\"Do you really want to delete this, it will be permanent!\");\n\n      if (r === true) {\n        axiosBaseURL.delete(\"/device/\" + this.state.device_id).then(result => {\n          this.setState({\n            redirect: \"/\"\n          });\n        }).catch(error => {\n          this.setState({\n            error: true\n          });\n        });\n      }\n    };\n\n    this.state = {\n      myDevice: {\n        appliance_name: \"My Appliance\",\n        device_state: 1,\n        device_battery: 100.0,\n        timestamp: \"2019-04-30T08:59:00.000Z\",\n        id: 1\n      },\n      myDevices: [],\n      error: false,\n      loading: true\n    };\n  }\n\n  componentDidMount() {\n    axiosBaseURL.get(\"/devices\").then(result => {\n      this.setState({\n        myDevices: result.data\n      }); //build a list called appNames used to create the options for the <select>\n\n      var myList = [];\n      var i;\n\n      for (i in this.state.myDevices) {\n        myList.push([this.state.myDevices[i].appliance_name, this.state.myDevices[i].id, parseInt(i) + 1]);\n      }\n    }).catch(error => {\n      this.setState({\n        loading: false,\n        error: true\n      });\n\n      if (error.response) {\n        this.setState({\n          error_response: error.response.data\n        });\n      }\n    });\n    console.log(this.state.myDevice.device_battery);\n\n    if (this.state.device_state) {\n      this.setState({\n        background: \"success\",\n        statusText: \"ON\"\n      });\n    } else if (!this.state.device_state) {\n      this.setState({\n        background: \"danger\"\n      });\n    }\n\n    this.setState({\n      loading: false\n    });\n  }\n\n  render() {\n    if (this.state.loading) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-center m-5\",\n        children: /*#__PURE__*/_jsxDEV(CircleSpinner, {\n          size: 60,\n          color: \"#686769\",\n          loading: this.state.loading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(Card, {\n      bg: this.state.background,\n      className: \"tile text-center col\",\n      children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n        children: [/*#__PURE__*/_jsxDEV(CircularProgressbar, {\n          value: this.state.device_battery,\n          maxValue: 1,\n          text: `${this.state.device_battery}%`,\n          styles: buildStyles({\n            textSize: '2.2rem',\n            textColor: '#000'\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(Card.Title, {\n          className: \"card-title-device\",\n          children: this.state.device_id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n          className: \"card-title-appliance_name\",\n          children: [this.state.device_id, \"(\", this.state.appliance_name, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          className: \"card-text-device_state\",\n          children: this.state.device_state\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          className: \"card-button btn btn-primary text-wrap\",\n          to: \"/device/\" + this.state.device_id,\n          children: \"Edit Device\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 10\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/mnt/e/MyReact/new_frontend/src/components/tile.js"],"names":["React","Component","Card","Link","CircularProgressbar","buildStyles","CircleSpinner","axiosBaseURL","Tile","constructor","props","deleteScout","event","r","window","confirm","delete","state","device_id","then","result","setState","redirect","catch","error","myDevice","appliance_name","device_state","device_battery","timestamp","id","myDevices","loading","componentDidMount","get","data","myList","i","push","parseInt","response","error_response","console","log","background","statusText","render","textSize","textColor"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Card from 'react-bootstrap/Card'\nimport {Link} from 'react-router-dom';\nimport {CircularProgressbar} from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\nimport {buildStyles} from 'react-circular-progressbar';\nimport {CircleSpinner} from 'react-spinners-kit';\nimport axiosBaseURL from '../axios.js'\n;\n\nexport default class Tile extends Component {\n   constructor(props) {\n      super(props);\n      this.state = {\n         myDevice: {\n            appliance_name: \"My Appliance\",\n            device_state: 1, \n            device_battery: 100.0,\n            timestamp: \"2019-04-30T08:59:00.000Z\",\n            id: 1,\n         },\n         myDevices: [],\n         error: false,\n         loading: true\n      }\n   }\n\n   componentDidMount() {\n      axiosBaseURL.get(\"/devices\")\n      .then((result) => {\n         this.setState({ myDevices: result.data });\n         //build a list called appNames used to create the options for the <select>\n         var myList = [];\n         var i;\n         for(i in this.state.myDevices) {\n            myList.push([this.state.myDevices[i].appliance_name, this.state.myDevices[i].id, parseInt(i)+1])\n         }\n      })\n      .catch( (error) => {\n         this.setState({loading: false, error: true});\n         if(error.response){\n            this.setState({error_response: error.response.data});\n         }\n      })\n      \n      console.log(this.state.myDevice.device_battery);\n      if(this.state.device_state){\n         this.setState({\n            background: \"success\",\n            statusText: \"ON\"\n         })\n      }\n      else if(!this.state.device_state){\n         this.setState({background: \"danger\"})\n      }\n      this.setState({loading: false})\n   }\n   deleteScout = (event) => {\n      //need to confirm first\n      const r = window.confirm(\"Do you really want to delete this, it will be permanent!\");\n      if(r === true){\n         axiosBaseURL.delete(\"/device/\"+this.state.device_id)\n         .then((result) => {this.setState({redirect:\"/\"})})\n         .catch((error) => {this.setState({ error: true });})\n      }\n   };\n\n   render(){\n      if(this.state.loading) {\n         return (\n            <div className=\"d-flex justify-content-center m-5\">\n               <CircleSpinner size={60} color=\"#686769\" loading={this.state.loading} />\n            </div>)\n      }\n      return(\n         <Card bg={this.state.background} className=\"tile text-center col\">\n            <Card.Header>\n               <CircularProgressbar value={this.state.device_battery} maxValue={1} text={`${this.state.device_battery}%`} styles={buildStyles({textSize: '2.2rem',textColor:'#000'})}/>\n               <Card.Title className=\"card-title-device\">{this.state.device_id}</Card.Title>\n            </Card.Header>\n            <Card.Body>\n               <Card.Title className=\"card-title-appliance_name\">{this.state.device_id}({this.state.appliance_name})</Card.Title>\n               {/*<Card.Text className=\"card-text-type\">{this.state.appliance_name}</Card.Text>*/}\n               <Card.Text className=\"card-text-device_state\">{this.state.device_state}</Card.Text>\n               <Link className=\"card-button btn btn-primary text-wrap\" to={\"/device/\"+this.state.device_id}>Edit Device</Link>\n               {/*I was thinking about using a dropdown here instead so that you can delete a scout without having\n               to go to the edit scout page, which may not load if the appliance of the scout doesnt exist\n               <DropdownButton device_id=\"dropdown-button\" title=\"Dropdown button\">\n                  <Dropdown.Item href={\"/scout/\"+this.state.device_id}>Edit</Dropdown.Item>\n                  <Dropdown.Item onClick={this.deleteScout}>Delete</Dropdown.Item>\n               </DropdownButton>*/}\n            </Card.Body>\n         </Card>\n      )\n   }\n}\n"]},"metadata":{},"sourceType":"module"}