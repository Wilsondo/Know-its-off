{"ast":null,"code":"var _jsxFileName = \"/mnt/e/MyReact/new_frontend/src/components/editDevice.js\";\nimport React, { Component } from 'react';\nimport { CircleSpinner } from 'react-spinners-kit';\nimport axiosBaseURL from '../axios.js';\nimport { Redirect } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar dbString;\nexport default class editDevice extends Component {\n  constructor(props) {\n    super(props);\n\n    this.postData = event => {\n      this.setState({\n        postLoading: true\n      }); //if creating a new appliance post it first\n\n      axiosBaseURL.get(\"/allDevices\").then(result => {\n        this.setState({\n          allDevices: result.data\n        });\n      });\n      let idVerify = true;\n\n      for (var x = 0; x < this.state.allDevices.length; x++) if (this.state.myDevice.id === this.state.allDevices[x].id) {\n        idVerify = false;\n      }\n\n      if (idVerify || this.state.myDevice.id === \"0\") {\n        console.log(this.state.myDevice);\n        axiosBaseURL.post('/device', this.state.myDevice).then(result => {\n          this.setState({\n            myDevice: { ...this.state.myDevice,\n              id: result.data.id\n            },\n            postLoading: false,\n            revealDetails: true\n          });\n          alert(\"Device Creation Successful!\");\n          this.props.history.push('/home');\n        }).catch(error => {\n          this.setState({\n            loading: false\n          });\n          alert(\"Please enter a valid Device ID!\");\n        });\n      }\n\n      event.preventDefault();\n    };\n\n    this.updateDevice = event => {\n      this.setState({\n        loading: true\n      });\n      axiosBaseURL.get(\"/allDevices\").then(result => {\n        this.setState({\n          allDevices: result.data\n        });\n      });\n      let idVerify = true;\n\n      for (var x = 0; x < this.state.allDevices.length; x++) if (this.state.myDevice.id === this.state.allDevices[x].id) {\n        idVerify = false;\n      }\n\n      if (idVerify) {\n        axiosBaseURL.patch(dbString, this.state.myDevice).then(result => {\n          this.setState({\n            loading: false\n          });\n          alert(\"Device Updated Successfully!\");\n          this.props.history.push('/home');\n        }).catch(error => {\n          this.setState({\n            loading: false,\n            error: true\n          });\n\n          if (error.response.data) {\n            console.log(error.response);\n          }\n        });\n      }\n\n      event.preventDefault();\n    };\n\n    this.deleteDevice = event => {\n      const r = window.confirm(\"Do you really want to delete this, it will be permanent!\");\n\n      if (r === true) {\n        axiosBaseURL.delete(dbString).then(result => {\n          this.setState({\n            redirect: '/home',\n            loading: false\n          });\n          alert(\"Device Removed Successfully!\");\n          this.props.history.push('/home');\n        }).catch(error => {\n          this.setState({\n            error: true\n          });\n\n          if (error.response) {\n            console.log(error.response);\n            this.setState({\n              error_response: error.response.data\n            });\n          }\n        });\n        event.preventDefault();\n      }\n    };\n\n    this.handleChangeDevice = event => {\n      this.setState({\n        myDevice: { ...this.state.myDevice,\n          [event.target.name]: event.target.value\n        }\n      });\n    };\n\n    this.state = {\n      myDevice: {\n        appliance_name: \"My Appliance\",\n        device_state: 1,\n        device_battery: 100.0,\n        //timestamp: \"2019-04-30T08:59:00.000Z\",\n        id: 1\n      },\n      loading: true,\n      error: false\n    };\n  }\n\n  componentDidMount() {\n    const handle = this.props.match.params.handle;\n    dbString = \"/device/\" + handle;\n    axiosBaseURL.get(dbString).then(result => {\n      this.setState({\n        myDevice: {\n          id: result.data.id,\n          appliance_name: result.data.appliance_name,\n          device_state: result.data.device_state,\n          device_battery: result.data.device_battery\n        },\n        loading: false\n      });\n    }).catch(error => {\n      this.setState({\n        loading: false,\n        error: true\n      });\n\n      if (error.response) {\n        this.setState({\n          error_response: error.response.data\n        });\n\n        if (error.response.data === \"not authorized\") {\n          this.setState({\n            redirect: dbString\n          });\n        } else if (error.response.data) {\n          console.log(error.response);\n        }\n      }\n    });\n  }\n\n  render() {\n    if (this.state.error) {\n      if (this.state.redirect) {\n        return /*#__PURE__*/_jsxDEV(Redirect, {\n          to: this.state.redirect\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 42\n        }, this);\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"m-5\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"There was an error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 38\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this);\n    }\n\n    if (this.state.loading) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-center m-5\",\n        children: /*#__PURE__*/_jsxDEV(CircleSpinner, {\n          size: 60,\n          color: \"#686769\",\n          loading: this.state.loading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 13\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"m-5 text-light\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Edit Device\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Appliance Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control text-dark\",\n            name: \"appliance_name\",\n            id: \"inputDeviceName\",\n            \"aria-describedby\": \"nameHelp\",\n            onChange: this.handleChangeDevice,\n            value: this.state.myDevice.appliance_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Device ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control text-dark\",\n            name: \"id\",\n            id: \"inputDeviceID\",\n            \"aria-describedby\": \"nameHelp\",\n            onChange: this.handleChangeDevice,\n            value: this.state.myDevice.appliance_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 4\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.updateDevice,\n          className: \"btn btn-success\",\n          children: [\"Update\", /*#__PURE__*/_jsxDEV(CircleSpinner, {\n            size: 20,\n            color: \"#3BBCE5\",\n            loading: this.state.loading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 74\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 4\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.deleteDevice,\n          className: \"btn btn-danger\",\n          children: [\"Delete\", /*#__PURE__*/_jsxDEV(CircleSpinner, {\n            size: 20,\n            color: \"#3BBCE5\",\n            loading: this.state.loading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 73\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 4\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 1\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/mnt/e/MyReact/new_frontend/src/components/editDevice.js"],"names":["React","Component","CircleSpinner","axiosBaseURL","Redirect","dbString","editDevice","constructor","props","postData","event","setState","postLoading","get","then","result","allDevices","data","idVerify","x","state","length","myDevice","id","console","log","post","revealDetails","alert","history","push","catch","error","loading","preventDefault","updateDevice","patch","response","deleteDevice","r","window","confirm","delete","redirect","error_response","handleChangeDevice","target","name","value","appliance_name","device_state","device_battery","componentDidMount","handle","match","params","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {CircleSpinner} from 'react-spinners-kit' ;\nimport axiosBaseURL from '../axios.js';\nimport { Redirect } from 'react-router-dom';\n\nvar dbString\n\nexport default class editDevice extends Component {\n   constructor(props) {\n     super(props);\n     this.state = {\n         myDevice: {\n            appliance_name: \"My Appliance\",\n            device_state: 1, \n            device_battery: 100.0,\n            //timestamp: \"2019-04-30T08:59:00.000Z\",\n            id: 1,\n         },\n\t   loading: true,\n\t   error: false,\n      }\n   };\n   componentDidMount() {\n      const handle = this.props.match.params.handle;\n\t\tdbString = \"/device/\" + handle\n\t\taxiosBaseURL.get(dbString)\n\t\t.then((result) => {\n\t\t\tthis.setState({ \n\t\t\t\tmyDevice: {\n\t\t\t\t\tid: result.data.id, \n\t\t\t\t\tappliance_name: result.data.appliance_name, \n\t\t\t\t\tdevice_state: result.data.device_state, \n\t\t\t\t\tdevice_battery: result.data.device_battery, \n            },\n            loading: false\n\t\t\t});\n      })\n      .catch( (error) => {\n         this.setState({loading: false, error: true});\n         if(error.response){\n            this.setState({error_response: error.response.data});\n            if(error.response.data === \"not authorized\"){ this.setState({redirect: dbString}) }\n            else if (error.response.data){console.log(error.response)}\n         }\n      })\n   }\n\n   postData = (event) => {\n      this.setState({postLoading:true});\n      //if creating a new appliance post it first\n\n      axiosBaseURL.get(\"/allDevices\")\n      .then((result) => {\n         this.setState({\n            allDevices: result.data\n         })\n      })\n      let idVerify = true;\n      for(var x = 0;x < this.state.allDevices.length; x++)\n         if(this.state.myDevice.id === this.state.allDevices[x].id){\n            idVerify = false;\n         }\n      if(idVerify || this.state.myDevice.id === \"0\"){\n         console.log(this.state.myDevice);\n         axiosBaseURL.post('/device', this.state.myDevice)\n         .then((result) => {\n            this.setState({ myDevice: {...this.state.myDevice, id: result.data.id}, postLoading:false, revealDetails:true })\n            alert(\"Device Creation Successful!\");\n            this.props.history.push('/home');\n         })\n         .catch((error) => {\n            this.setState({loading: false})\n            alert(\"Please enter a valid Device ID!\");\n         })\n      }\n      event.preventDefault();\n   };\n   \n   updateDevice = (event) => {\n      this.setState({loading:true});\n      axiosBaseURL.get(\"/allDevices\")\n      .then((result) => {\n         this.setState({\n            allDevices: result.data\n         })\n      })\n      let idVerify = true;\n      for(var x = 0;x < this.state.allDevices.length; x++)\n         if(this.state.myDevice.id === this.state.allDevices[x].id){\n            idVerify = false;\n         }\n      if(idVerify) {\n         axiosBaseURL.patch(dbString, this.state.myDevice)\n         .then((result) => {\n            this.setState({loading: false});\n               alert(\"Device Updated Successfully!\");\n               this.props.history.push('/home');\n         })\n         .catch((error)=>{\n            this.setState({loading:false, error:true})\n            if(error.response.data){console.log(error.response)}\n         })\n      }\n\t   event.preventDefault();\n   };\n\n   deleteDevice = (event) => {\n      const r = window.confirm(\"Do you really want to delete this, it will be permanent!\");\n      if(r === true){\n         axiosBaseURL.delete(dbString)\n         .then((result) => {\n            this.setState({redirect: '/home', loading: false});\n            alert(\"Device Removed Successfully!\");\n            this.props.history.push('/home');\n         })\n         .catch((error) => {\n            this.setState({ error: true });\n            if(error.response){\n               console.log(error.response)\n               this.setState({error_response: error.response.data})\n            }\n         })\n         event.preventDefault();\n      }\n   };\n   handleChangeDevice = (event) => { \n      this.setState({\n         myDevice : {...this.state.myDevice, [event.target.name]: event.target.value}\n      });\n   };\n\n\trender(){\n\t\tif(this.state.error) {\n         if(this.state.redirect) {return <Redirect to={this.state.redirect} />}\n         return(<div className=\"m-5\"><h3>There was an error</h3></div>) \n      }\n\t\tif(this.state.loading){\n         return (\n            <div className=\"d-flex justify-content-center m-5\">\n               <CircleSpinner size={60} color=\"#686769\" loading={this.state.loading} />\n            </div>)\n\t\t}\n\t\treturn(\n<div className=\"m-5 text-light\">\n<h3>Edit Device</h3>\n<form>\n   <div className=\"form-group\">\n      <label>Appliance Name</label>\n      <input className=\"form-control text-dark\" name=\"appliance_name\" id=\"inputDeviceName\" aria-describedby=\"nameHelp\" onChange={this.handleChangeDevice} value={this.state.myDevice.appliance_name} />\n      <label>Device ID</label>\n      <input className=\"form-control text-dark\" name=\"id\" id=\"inputDeviceID\" aria-describedby=\"nameHelp\" onChange={this.handleChangeDevice} value={this.state.myDevice.appliance_name} />\n   </div>\n\n   <button onClick={this.updateDevice} className=\"btn btn-success\">Update<CircleSpinner size={20} color=\"#3BBCE5\" loading={this.state.loading} /></button>\n   <button onClick={this.deleteDevice} className=\"btn btn-danger\">Delete<CircleSpinner size={20} color=\"#3BBCE5\" loading={this.state.loading} /></button>\n</form>\n</div>\n\t\t)\n\t}\n}\n\n"]},"metadata":{},"sourceType":"module"}