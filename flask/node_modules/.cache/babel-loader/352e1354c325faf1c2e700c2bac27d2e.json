{"ast":null,"code":"import _classCallCheck from\"/mnt/e/MyReact/new_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/mnt/e/MyReact/new_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/mnt/e/MyReact/new_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/mnt/e/MyReact/new_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import{jsx as _jsx}from\"react/jsx-runtime\";import React,{Component,createContext}from\"react\";import Cookies from'js-cookie';//import { GridContextProvider } from \"react-grid-dnd\";\n// Helper functions\nfunction move(array,oldIndex,newIndex){if(newIndex>=array.length){newIndex=array.length-1;}array.splice(newIndex,0,array.splice(oldIndex,1)[0]);return array;}function moveElement(array,index,offset){var newIndex=index+offset;return move(array,index,newIndex);}/*function findIndexofItems(i, items_copy, cookie_items) {\n  return items_copy.findIndex(item => item.id === cookie_items[i].id) \n}*/ // Context\nvar GridContext=/*#__PURE__*/createContext({items:[]});export var GridProvider=/*#__PURE__*/function(_Component){_inherits(GridProvider,_Component);var _super=_createSuper(GridProvider);function GridProvider(props){var _this;_classCallCheck(this,GridProvider);_this=_super.call(this,props);_this.setItems=function(items){if(!Cookies.get('idList')&&items){_this.setState({items:items});}else{var i,j;var items_copy=items.slice();//retreive cookie\nvar cookie_idList=JSON.parse(Cookies.get('idList'));var myArr=[];//reorder items based on cookie_idList\nfor(i in cookie_idList){for(j in items_copy){var itemID=items_copy[j].id;var cookieID=cookie_idList[i];if(itemID===cookieID){myArr.push(items_copy[j]);items_copy.splice(j,1);}}}}for(i in items_copy){myArr.push(items_copy[i]);}if(myArr){_this.setState({items:myArr});}};_this.moveItem=function(sourceId,destinationId){var sourceIndex=_this.state.items.findIndex(function(item){return item.id===sourceId;});var destinationIndex=_this.state.items.findIndex(function(item){return item.id===destinationId;});// If source/destination is unknown, do nothing.\nif(sourceId===-1||destinationId===-1){return;}var offset=destinationIndex-sourceIndex;_this.setState(function(state){return{items:moveElement(state.items,sourceIndex,offset)};});//store items in cookie\nvar i;var idList=[];for(i in _this.state.items){idList.push(_this.state.items[i].id);}Cookies.set('idList',idList);};_this.state={items:[],moveItem:_this.moveItem,setItems:_this.setItems};return _this;}_createClass(GridProvider,[{key:\"render\",value:function render(){return/*#__PURE__*/_jsx(GridContext.Provider,{value:this.state,children:this.props.children});}}]);return GridProvider;}(Component);export default GridContext;","map":{"version":3,"sources":["/mnt/e/MyReact/new_frontend/src/components/grid/GridContext.js"],"names":["React","Component","createContext","Cookies","move","array","oldIndex","newIndex","length","splice","moveElement","index","offset","GridContext","items","GridProvider","props","setItems","get","setState","i","j","items_copy","slice","cookie_idList","JSON","parse","myArr","itemID","id","cookieID","push","moveItem","sourceId","destinationId","sourceIndex","state","findIndex","item","destinationIndex","idList","set","children"],"mappings":"mmBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,aAA3B,KAAgD,OAAhD,CACA,MAAOC,CAAAA,OAAP,KAAoB,WAApB,CAEA;AAEA;AAEA,QAASC,CAAAA,IAAT,CAAcC,KAAd,CAAqBC,QAArB,CAA+BC,QAA/B,CAAyC,CACvC,GAAIA,QAAQ,EAAIF,KAAK,CAACG,MAAtB,CAA8B,CAC5BD,QAAQ,CAAGF,KAAK,CAACG,MAAN,CAAe,CAA1B,CACD,CACDH,KAAK,CAACI,MAAN,CAAaF,QAAb,CAAuB,CAAvB,CAA0BF,KAAK,CAACI,MAAN,CAAaH,QAAb,CAAuB,CAAvB,EAA0B,CAA1B,CAA1B,EACA,MAAOD,CAAAA,KAAP,CACD,CAED,QAASK,CAAAA,WAAT,CAAqBL,KAArB,CAA4BM,KAA5B,CAAmCC,MAAnC,CAA2C,CACzC,GAAML,CAAAA,QAAQ,CAAGI,KAAK,CAAGC,MAAzB,CAEA,MAAOR,CAAAA,IAAI,CAACC,KAAD,CAAQM,KAAR,CAAeJ,QAAf,CAAX,CACD,CAED;AACA;AACA,G,CAEA;AAEA,GAAMM,CAAAA,WAAW,cAAGX,aAAa,CAAC,CAAEY,KAAK,CAAE,EAAT,CAAD,CAAjC,CAEA,UAAaC,CAAAA,YAAb,4GACE,sBAAYC,KAAZ,CAAmB,8CACjB,uBAAMA,KAAN,EADiB,MAiBnBC,QAjBmB,CAiBR,SAAAH,KAAK,CAAI,CAClB,GAAG,CAACX,OAAO,CAACe,GAAR,CAAY,QAAZ,CAAD,EAA0BJ,KAA7B,CAAmC,CACjC,MAAKK,QAAL,CAAc,CAACL,KAAK,CAALA,KAAD,CAAd,EACD,CAFD,IAGI,CACF,GAAIM,CAAAA,CAAJ,CAAOC,CAAP,CACA,GAAIC,CAAAA,UAAU,CAAGR,KAAK,CAACS,KAAN,EAAjB,CACA;AACA,GAAIC,CAAAA,aAAa,CAAGC,IAAI,CAACC,KAAL,CAAWvB,OAAO,CAACe,GAAR,CAAY,QAAZ,CAAX,CAApB,CACA,GAAIS,CAAAA,KAAK,CAAG,EAAZ,CACA;AACA,IAAIP,CAAJ,GAASI,CAAAA,aAAT,CAAuB,CACpB,IAAIH,CAAJ,GAASC,CAAAA,UAAT,CAAoB,CACjB,GAAMM,CAAAA,MAAM,CAAGN,UAAU,CAACD,CAAD,CAAV,CAAcQ,EAA7B,CACA,GAAMC,CAAAA,QAAQ,CAAGN,aAAa,CAACJ,CAAD,CAA9B,CACA,GAAGQ,MAAM,GAAKE,QAAd,CAAuB,CACpBH,KAAK,CAACI,IAAN,CAAWT,UAAU,CAACD,CAAD,CAArB,EACAC,UAAU,CAACb,MAAX,CAAkBY,CAAlB,CAAoB,CAApB,EACF,CACF,CACF,CACF,CACD,IAAID,CAAJ,GAASE,CAAAA,UAAT,CAAoB,CAACK,KAAK,CAACI,IAAN,CAAWT,UAAU,CAACF,CAAD,CAArB,EAA0B,CAC/C,GAAGO,KAAH,CAAS,CACN,MAAKR,QAAL,CAAc,CAACL,KAAK,CAAEa,KAAR,CAAd,EACF,CACJ,CA3CkB,OA6CnBK,QA7CmB,CA6CR,SAACC,QAAD,CAAWC,aAAX,CAA6B,CACtC,GAAMC,CAAAA,WAAW,CAAG,MAAKC,KAAL,CAAWtB,KAAX,CAAiBuB,SAAjB,CAClB,SAAAC,IAAI,QAAIA,CAAAA,IAAI,CAACT,EAAL,GAAYI,QAAhB,EADc,CAApB,CAGA,GAAMM,CAAAA,gBAAgB,CAAG,MAAKH,KAAL,CAAWtB,KAAX,CAAiBuB,SAAjB,CACvB,SAAAC,IAAI,QAAIA,CAAAA,IAAI,CAACT,EAAL,GAAYK,aAAhB,EADmB,CAAzB,CAIA;AACA,GAAID,QAAQ,GAAK,CAAC,CAAd,EAAmBC,aAAa,GAAK,CAAC,CAA1C,CAA6C,CAC3C,OACD,CAED,GAAMtB,CAAAA,MAAM,CAAG2B,gBAAgB,CAAGJ,WAAlC,CAEA,MAAKhB,QAAL,CAAc,SAAAiB,KAAK,QAAK,CACtBtB,KAAK,CAAEJ,WAAW,CAAC0B,KAAK,CAACtB,KAAP,CAAcqB,WAAd,CAA2BvB,MAA3B,CADI,CAAL,EAAnB,EAIA;AACA,GAAIQ,CAAAA,CAAJ,CACA,GAAIoB,CAAAA,MAAM,CAAG,EAAb,CACA,IAAIpB,CAAJ,GAAS,OAAKgB,KAAL,CAAWtB,KAApB,CAA0B,CACvB0B,MAAM,CAACT,IAAP,CAAY,MAAKK,KAAL,CAAWtB,KAAX,CAAiBM,CAAjB,EAAoBS,EAAhC,EACF,CACD1B,OAAO,CAACsC,GAAR,CAAY,QAAZ,CAAsBD,MAAtB,EACD,CAvEkB,CAEjB,MAAKJ,KAAL,CAAa,CACXtB,KAAK,CAAE,EADI,CAEXkB,QAAQ,CAAE,MAAKA,QAFJ,CAGXf,QAAQ,CAAE,MAAKA,QAHJ,CAAb,CAFiB,aAOlB,CARH,gEAUW,CACP,mBACE,KAAC,WAAD,CAAa,QAAb,EAAsB,KAAK,CAAE,KAAKmB,KAAlC,UACG,KAAKpB,KAAL,CAAW0B,QADd,EADF,CAKD,CAhBH,0BAAkCzC,SAAlC,EA2EA,cAAeY,CAAAA,WAAf","sourcesContent":["import React, { Component, createContext } from \"react\";\nimport Cookies from 'js-cookie';\n\n//import { GridContextProvider } from \"react-grid-dnd\";\n\n// Helper functions\n\nfunction move(array, oldIndex, newIndex) {\n  if (newIndex >= array.length) {\n    newIndex = array.length - 1;\n  }\n  array.splice(newIndex, 0, array.splice(oldIndex, 1)[0]);\n  return array;\n}\n\nfunction moveElement(array, index, offset) {\n  const newIndex = index + offset;\n\n  return move(array, index, newIndex);\n}\n\n/*function findIndexofItems(i, items_copy, cookie_items) {\n  return items_copy.findIndex(item => item.id === cookie_items[i].id) \n}*/\n\n// Context\n\nconst GridContext = createContext({ items: [] });\n\nexport class GridProvider extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: [],\n      moveItem: this.moveItem,\n      setItems: this.setItems\n    };\n  }\n\n  render() {\n    return (\n      <GridContext.Provider value={this.state}>\n        {this.props.children}\n      </GridContext.Provider>\n    );\n  }\n\n  setItems = items => {\n    if(!Cookies.get('idList') && items){\n      this.setState({items})\n    }\n    else{\n      var i, j\n      var items_copy = items.slice()\n      //retreive cookie\n      var cookie_idList = JSON.parse(Cookies.get('idList'));\n      var myArr = []\n      //reorder items based on cookie_idList\n      for(i in cookie_idList){\n         for(j in items_copy){\n            const itemID = items_copy[j].id\n            const cookieID = cookie_idList[i]\n            if(itemID === cookieID){\n               myArr.push(items_copy[j])\n               items_copy.splice(j,1)\n            }\n          }\n        }\n      }\n      for(i in items_copy){myArr.push(items_copy[i])}\n      if(myArr){\n         this.setState({items: myArr})\n      }\n  };\n\n  moveItem = (sourceId, destinationId) => {\n    const sourceIndex = this.state.items.findIndex(\n      item => item.id === sourceId\n    );\n    const destinationIndex = this.state.items.findIndex(\n      item => item.id === destinationId\n    );\n\n    // If source/destination is unknown, do nothing.\n    if (sourceId === -1 || destinationId === -1) {\n      return;\n    }\n\n    const offset = destinationIndex - sourceIndex;\n\n    this.setState(state => ({\n      items: moveElement(state.items, sourceIndex, offset)\n    }));\n\n    //store items in cookie\n    var i\n    var idList = []\n    for(i in this.state.items){\n       idList.push(this.state.items[i].id)\n    }\n    Cookies.set('idList', idList)\n  };\n}\n\nexport default GridContext;\n"]},"metadata":{},"sourceType":"module"}