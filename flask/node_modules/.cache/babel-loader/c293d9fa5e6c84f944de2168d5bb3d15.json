{"ast":null,"code":"var _jsxFileName = \"/mnt/e/MyReact/new_frontend/src/components/home.js\";\nimport React, { Component } from 'react';\nimport axiosBaseURL from '../axios.js';\nimport { Redirect } from 'react-router-dom';\nimport { CircleSpinner } from 'react-spinners-kit';\nimport GridApp from './grid/GridApp';\nimport GridContext from './grid/GridContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Home extends Component {\n  constructor(props) {\n    super(props);\n\n    this.count_dev_state = arr => {\n      var result = 0;\n\n      for (var x = 0; arr.length > x; x++) {\n        if (arr[x].device_state === 1) {\n          result++;\n        }\n      }\n\n      return result;\n    };\n\n    this.test = () => {\n      this.setState({\n        key: Math.random()\n      });\n    };\n\n    this.state = {\n      myDevices: [],\n      loading: true,\n      error: false,\n      redirect: null,\n      key: 0\n    };\n  }\n\n  componentDidMount() {\n    axiosBaseURL.get(\"/devices\").then(app_result => {\n      this.setState({\n        myDevices: app_result.data,\n        num_on: this.count_dev_state(app_result.data)\n      });\n      const context = this.context;\n      context.setItems(app_result.data);\n      this.setState({\n        loading: false\n      });\n    }).catch(error => {\n      this.setState({\n        loading: false,\n        error: true\n      });\n      console.log(\"error at get device: \", error.response);\n    });\n  }\n\n  render() {\n    if (this.state.loading) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-center m-5\",\n        children: /*#__PURE__*/_jsxDEV(CircleSpinner, {\n          size: 60,\n          color: \"#686769\",\n          loading: this.state.loading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 10\n      }, this);\n    }\n\n    if (this.state.error) {\n      if (this.state.redirect) {\n        return /*#__PURE__*/_jsxDEV(Redirect, {\n          to: this.state.redirect\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 39\n        }, this);\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"There was an error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: this.state.error_response\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 46\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 14\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row m-3 text-light\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-center\",\n            children: \"Home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 10\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row m-3 text-light\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n            className: \"text-muted text-center\",\n            children: [this.state.num_on, \" of your appliances are on.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.test,\n            className: \"btn btn-info\",\n            children: \"test\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 10\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(GridApp, {\n        onClick: this.test\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 4\n    }, this);\n  }\n\n}\nHome.contextType = GridContext;","map":{"version":3,"sources":["/mnt/e/MyReact/new_frontend/src/components/home.js"],"names":["React","Component","axiosBaseURL","Redirect","CircleSpinner","GridApp","GridContext","Home","constructor","props","count_dev_state","arr","result","x","length","device_state","test","setState","key","Math","random","state","myDevices","loading","error","redirect","componentDidMount","get","then","app_result","data","num_on","context","setItems","catch","console","log","response","render","error_response","contextType"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport axiosBaseURL from '../axios.js';\nimport {Redirect} from 'react-router-dom';\nimport {CircleSpinner} from 'react-spinners-kit';\nimport GridApp from './grid/GridApp';\nimport GridContext from './grid/GridContext';\n\nexport default class Home extends Component {\n   static contextType = GridContext\n   constructor(props) {\n      super(props);\n      this.state = {\n         myDevices: [],\n         loading: true,\n         error: false,\n         redirect: null, \n         key: 0\n      };\n   };\n\ncount_dev_state = (arr) => {\n   var result = 0;\n   for(var x = 0; arr.length > x; x++){\n      if(arr[x].device_state === 1){\n         result++;\n      }\n   }\n   return result;\n}\n\ncomponentDidMount() {\n   axiosBaseURL.get(\"/devices\")\n      .then( (app_result) => {\n         this.setState({\n            myDevices: app_result.data,\n            num_on: this.count_dev_state(app_result.data)\n         })\n         const context = this.context\n         context.setItems(app_result.data)\n         this.setState({loading: false})\n      })\n      .catch( (error) => {\n         this.setState({loading: false, error: true});\n         console.log(\"error at get device: \", error.response)\n      })\n}\n   test = () => {\n      this.setState({key: Math.random() })\n   }\n\n\nrender(){\n   if(this.state.loading) {\n       return (\n         <div className=\"d-flex justify-content-center m-5\">\n            <CircleSpinner size={60} color=\"#686769\" loading={this.state.loading} />\n         </div>)\n   }\n   if(this.state.error) {\n      if(this.state.redirect) {return <Redirect to={this.state.redirect} />}\n      return(<div><h3>There was an error</h3><h3>{this.state.error_response}</h3></div>)\n   }\n   return(\n   <div>\n      <div className=\"row m-3 text-light\">\n         <div className=\"col\">\n            <h1 className=\"text-center\">Home</h1>\n         </div>\n      </div>\n      <div className=\"row m-3 text-light\">\n         <div className=\"col\">\n            <h6 className=\"text-muted text-center\">\n               {this.state.num_on} of your appliances are on.\n            </h6>\n            <button onClick = {this.test} className=\"btn btn-info\">test</button>\n         </div>\n      </div>\n      <GridApp onClick = { this.test }/>      \n   </div>\n   )\n}}\n"]},"metadata":{},"sourceType":"module"}