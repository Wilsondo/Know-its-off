{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/mnt/e/MyReact/new_frontend/src/components/editDevice.js\";\nimport React, { Component } from 'react';\nimport { CircleSpinner } from 'react-spinners-kit';\nimport axiosBaseURL from '../axios.js';\nimport { Redirect } from 'react-router-dom';\nexport default class editDevice extends Component {\n  constructor(props) {\n    super(props);\n\n    this.updateAppliance = event => {\n      this.setState({\n        patchLoading: true\n      });\n\n      if (this.state.myAppliance.id === 0) {\n        //post new appliance and return id to patch scout\n        axios.post('/appliances', this.state.myAppliance).then(result => {\n          this.setState({\n            myScout: { ...this.state.myScout,\n              appliance_id: result.data.id\n            }\n          });\n          this.updateScout();\n        }).catch(error => {\n          this.setState({\n            patchLoading: false,\n            error: true\n          });\n\n          if (error.response.data) {\n            console.log(error.response);\n          }\n        });\n      } else {\n        axios.patch('/appliances/' + parseInt(this.state.myAppliance.id), this.state.myAppliance).then(result => {\n          this.updateScout();\n        }).catch(error => {\n          this.setState({\n            patchLoading: false,\n            error: true\n          });\n\n          if (error.response.data) {\n            console.log(error.response);\n          }\n        });\n      }\n\n      event.preventDefault();\n    };\n\n    this.deleteScout = event => {\n      //need to confirm first\n      const r = window.confirm(\"Do you really want to delete this, it will be permanent!\");\n\n      if (r === true) {\n        axios.delete(\"/scouts/\" + this.state.scout_id).then(result => {\n          this.setState({\n            redirect: \"/home\"\n          });\n        }).catch(error => {\n          this.setState({\n            error: true\n          });\n\n          if (error.response) {\n            console.log(error.response);\n            this.setState({\n              error_response: error.response.data\n            });\n          }\n        });\n      }\n    };\n\n    this.handleChange = event => {\n      //REMEMBER setState is async, cant expect myAppliance to be updated before new appliance\n      this.setState({\n        myAppliance: { ...this.state.myAppliance,\n          [event.target.name]: event.target.value\n        }\n      });\n\n      if (this.state.doingNewAppliance) {\n        this.setState({\n          newAppliance: { ...this.state.myAppliance\n          }\n        });\n      }\n    };\n\n    this.handleChangeScout = event => {\n      this.setState({\n        myScout: { ...this.state.myScout,\n          [event.target.name]: event.target.value\n        }\n      });\n    };\n\n    this.handleChangeSelect = event => {\n      //get the appliance id of the choosen value and set in state\n      //dont want to disable any fields but does need to update the fields with appliance values\n      if (event.target.value === \"0\") {\n        this.setState({\n          myAppliance: { ...this.state.newAppliance,\n            id: 0\n          },\n          myScout: { ...this.state.myScout,\n            appliance_id: 0\n          },\n          doingNewAppliance: true\n        });\n      } else {\n        this.setState({\n          myAppliance: { ...this.state.usersAppliances[parseInt(event.target.value) - 1]\n          },\n          myScout: { ...this.state.myScout,\n            appliance_id: this.state.usersAppliances[parseInt(event.target.value) - 1].id\n          },\n          doingNewAppliance: false\n        });\n      }\n    };\n\n    this.handleChangeCheck = event => {\n      this.setState({\n        myAppliance: { ...this.state.myAppliance,\n          [event.target.name]: event.target.checked\n        }\n      });\n\n      if (this.state.doingNewAppliance) {\n        this.setState({\n          newAppliance: { ...this.state.myAppliance,\n            [event.target.name]: event.target.checked\n          }\n        });\n      }\n    };\n\n    this.state = {\n      myDevice: {\n        appliance_name: \"My Appliance\",\n        device_state: \"1\",\n        device_battery: \"100.0\",\n        timestamp: \"2019-04-30T08:59:00.000Z\",\n        id: null\n      },\n      usersAppliances: [],\n      applianceNames: [],\n      doingNewAppliance: false,\n      disabled: true,\n      loading: true,\n      error: false,\n      patchLoading: false,\n      deleteLoading: false,\n      redirect: null\n    };\n  } //Get users appliances, add the names to the select form element\n\n\n  componentDidMount() {\n    const handle = this.props.match.params.handle;\n    this.setState({\n      scout_id: handle\n    });\n    axios.get(\"/devices\").then(result => {\n      this.setState({\n        usersAppliances: result.data\n      }); //build a list called applianceNames used to create the options for the <select>\n\n      var myList = [];\n      var i;\n\n      for (i in this.state.usersAppliances) {\n        myList.push([this.state.usersAppliances[i].name, this.state.usersAppliances[i].id, parseInt(i) + 1]);\n      }\n\n      this.setState({\n        applianceNames: myList\n      });\n    }).catch(error => {\n      this.setState({\n        loading: false,\n        error: true\n      });\n\n      if (error.response) {\n        this.setState({\n          error_response: error.response.data\n        });\n\n        if (error.response.data === \"not authorized\") {\n          this.setState({\n            redirect: \"/\"\n          });\n        } else if (error.response.data) {\n          console.log(error.response);\n        }\n      }\n    }); //get the details of the scout\n\n    axios.get(`/scouts/${handle}`).then(result => {\n      this.setState({\n        myScout: {\n          name: result.data.name,\n          appliance_id: result.data.appliance_id\n        }\n      }); //get the details of the appliance that we are editing\n\n      axios.get(\"/appliances/\" + result.data.appliance_id).then(result => {\n        this.setState({\n          myAppliance: result.data,\n          loading: false\n        });\n      }).catch(error => {\n        //Probably authorized, an error here means the appliance doesnt exist or is inaccessible\n        this.setState({\n          loading: false,\n          myAppliance: { ...this.state.newAppliance,\n            id: 0\n          }\n        });\n      });\n    }).catch(error => {\n      this.setState({\n        loading: false,\n        error: true\n      });\n\n      if (error.response) {\n        this.setState({\n          error_response: error.response.data\n        });\n\n        if (error.response.data === \"not authorized\") {\n          this.setState({\n            redirect: \"/\"\n          });\n        } else if (error.response.data) {\n          console.log(error.response);\n        }\n      }\n    });\n  }\n\n  updateScout() {\n    axios.patch('/scouts/' + this.state.scout_id, this.state.myScout).then(result => {\n      this.setState({\n        patchLoading: false\n      });\n      alert(\"Appliance updated.\");\n    }).catch(error => {\n      this.setState({\n        patchLoading: false,\n        error: true\n      });\n\n      if (error.response.data) {\n        console.log(error.response);\n      }\n    });\n  }\n\n  render() {\n    if (this.state.redirect) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: this.state.redirect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 39\n      }, this);\n    }\n\n    if (this.state.error) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"m-5\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"There was an error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 38\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }, this);\n    }\n\n    if (this.state.loading) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-center m-5\",\n        children: /*#__PURE__*/_jsxDEV(CircleSpinner, {\n          size: 60,\n          color: \"#686769\",\n          loading: this.state.loading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 13\n      }, this);\n    } //need to set the scouts appliance as \"selected\"\n    //value has to match the index of usersAppliances, from that array you can fetch the id\n\n\n    let options = this.state.applianceNames.map(data => {\n      return /*#__PURE__*/_jsxDEV(\"option\", {\n        value: data[2],\n        children: data[0]\n      }, data[2], false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 21\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"m-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Edit Scout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Scout name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control\",\n            name: \"name\",\n            id: \"inputScoutName\",\n            \"aria-describedby\": \"nameHelp\",\n            onChange: this.handleChangeScout,\n            value: this.state.myScout.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 4\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Choose Existing Appliance\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"form-control\",\n            id: \"inputApplianceId\",\n            onChange: this.handleChangeSelect,\n            defaultValue: this.state.usersAppliances.findIndex(app => app.id === this.state.myAppliance.id) + 1,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"0\",\n              children: \"New Appliance\"\n            }, \"0\", false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 10\n            }, this), options]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 4\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Appliance name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control\",\n            name: \"name\",\n            id: \"inputApplianceName\",\n            onChange: this.handleChange,\n            value: this.state.myAppliance.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 4\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Appliance type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control\",\n            name: \"type\",\n            id: \"inputApplianceType\",\n            onChange: this.handleChange,\n            value: this.state.myAppliance.type\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 4\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Alert Message\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control\",\n            name: \"alert_message\",\n            id: \"inputAlertMessage\",\n            onChange: this.handleChange,\n            value: this.state.myAppliance.alert_message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 4\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Alert Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control\",\n            name: \"alert_time\",\n            id: \"inputAlertTime\",\n            onChange: this.handleChange,\n            value: this.state.myAppliance.alert_time\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 4\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-check\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            className: \"form-check-input\",\n            name: \"alert_email\",\n            onChange: this.handleChangeCheck,\n            checked: this.state.myAppliance.alert_email,\n            id: \"inputAlertEmail\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-check-label\",\n            children: \"Send email alerts\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 4\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-check\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            className: \"form-check-input\",\n            id: \"inputAlertText\",\n            name: \"alert_text\",\n            onChange: this.handleChangeCheck,\n            checked: this.state.myAppliance.alert_text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-check-label\",\n            children: \"Send text alerts\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 4\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.updateAppliance,\n          className: \"btn btn-success\",\n          children: [\"Update this scout\", /*#__PURE__*/_jsxDEV(CircleSpinner, {\n            size: 20,\n            color: \"#3BBCE5\",\n            loading: this.state.patchLoading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 88\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 4\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.deleteScout,\n          className: \"btn btn-danger\",\n          children: [\"Delete this scout\", /*#__PURE__*/_jsxDEV(CircleSpinner, {\n            size: 20,\n            color: \"#3BBCE5\",\n            loading: this.state.deleteLoading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 83\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 4\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 1\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/mnt/e/MyReact/new_frontend/src/components/editDevice.js"],"names":["React","Component","CircleSpinner","axiosBaseURL","Redirect","editDevice","constructor","props","updateAppliance","event","setState","patchLoading","state","myAppliance","id","axios","post","then","result","myScout","appliance_id","data","updateScout","catch","error","response","console","log","patch","parseInt","preventDefault","deleteScout","r","window","confirm","delete","scout_id","redirect","error_response","handleChange","target","name","value","doingNewAppliance","newAppliance","handleChangeScout","handleChangeSelect","usersAppliances","handleChangeCheck","checked","myDevice","appliance_name","device_state","device_battery","timestamp","applianceNames","disabled","loading","deleteLoading","componentDidMount","handle","match","params","get","myList","i","push","alert","render","options","map","findIndex","app","type","alert_message","alert_time","alert_email","alert_text"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport {CircleSpinner} from 'react-spinners-kit' \nimport axiosBaseURL from '../axios.js'\n\nimport {Redirect} from 'react-router-dom'\n\nexport default class editDevice extends Component {\n   constructor(props) {\n     super(props);\n     this.state = {\n       myDevice: {\n          appliance_name: \"My Appliance\",\n          device_state: \"1\", \n          device_battery: \"100.0\",\n          timestamp: \"2019-04-30T08:59:00.000Z\",\n          id: null,\n       },\n      usersAppliances: [],\n      applianceNames: [],\n      doingNewAppliance: false,\n      disabled: true,\n\t   loading: true,\n\t   error: false,\n\t   patchLoading: false,\n      deleteLoading: false,\n      redirect: null\n    };\n  }\n\n   //Get users appliances, add the names to the select form element\n   componentDidMount() {\n      const handle = this.props.match.params.handle;\n      this.setState({scout_id: handle})\n      axios.get(\"/devices\")\n      .then((result) => {\n         this.setState({ usersAppliances: result.data });\n         //build a list called applianceNames used to create the options for the <select>\n         var myList = [];\n         var i;\n         for(i in this.state.usersAppliances) {\n            myList.push([this.state.usersAppliances[i].name, this.state.usersAppliances[i].id, parseInt(i)+1])\n         }\n         this.setState({ applianceNames: myList })\n      })\n      .catch( (error) => {\n         this.setState({loading: false, error: true});\n         if(error.response){\n            this.setState({error_response: error.response.data});\n            if(error.response.data === \"not authorized\"){ this.setState({redirect: \"/\"}) }\n            else if (error.response.data){console.log(error.response)}\n         }\n      })\n      //get the details of the scout\n      axios.get(`/scouts/${handle}`)\n      .then((result) => {\n         this.setState({ myScout: {name: result.data.name, appliance_id: result.data.appliance_id} });\n         //get the details of the appliance that we are editing\n         axios.get(\"/appliances/\"+result.data.appliance_id)\n         .then((result) => {\n            this.setState({ myAppliance: result.data, loading: false})\n         })\n         .catch((error) => {\n            //Probably authorized, an error here means the appliance doesnt exist or is inaccessible\n            this.setState({loading: false,myAppliance:{...this.state.newAppliance,id:0}});\n         })\n      })\n      .catch((error) => {\n         this.setState({loading: false, error: true});\n         if(error.response){\n            this.setState({error_response: error.response.data});\n            if(error.response.data === \"not authorized\"){ this.setState({redirect: \"/\"}) }\n            else if (error.response.data){console.log(error.response)}\n         }\n      })\n   }\n\n   updateAppliance = (event) => {\n      this.setState({patchLoading:true});\n      if(this.state.myAppliance.id === 0) {\n         //post new appliance and return id to patch scout\n         axios.post('/appliances', this.state.myAppliance)\n         .then((result) => {\n            this.setState({myScout: {...this.state.myScout, appliance_id: result.data.id}})\n            this.updateScout()\n         })\n         .catch((error)=>{\n            this.setState({patchLoading:false,error:true})\n            if(error.response.data){console.log(error.response)}\n         })\n      }\n      else {\n         axios.patch('/appliances/'+parseInt(this.state.myAppliance.id), this.state.myAppliance)\n         .then((result) => {\n            this.updateScout()\n         })\n         .catch((error)=>{\n            this.setState({patchLoading:false,error:true})\n            if(error.response.data){console.log(error.response)}\n         })\n      }\n\t   event.preventDefault();\n   };\n   updateScout() {\n      axios.patch('/scouts/'+this.state.scout_id, this.state.myScout)\n      .then((result) =>{\n         this.setState({patchLoading: false}); \n\t\t\talert(\"Appliance updated.\")\n      })\n      .catch((error)=>{\n         this.setState({patchLoading:false,error:true})\n         if(error.response.data){console.log(error.response)}\n      })\n   }\n   deleteScout = (event) => {\n      //need to confirm first\n      const r = window.confirm(\"Do you really want to delete this, it will be permanent!\");\n      if(r === true){\n         axios.delete(\"/scouts/\"+this.state.scout_id)\n         .then((result) => {this.setState({redirect:\"/home\"})})\n         .catch((error) => {\n            this.setState({ error: true });\n            if(error.response){\n               console.log(error.response)\n               this.setState({error_response: error.response.data})\n            }\n         })\n      }\n   };\n\n   handleChange = (event) => {\n      //REMEMBER setState is async, cant expect myAppliance to be updated before new appliance\n      this.setState({\n         myAppliance : {...this.state.myAppliance, [event.target.name]: event.target.value}\n      })\n      if(this.state.doingNewAppliance){this.setState({newAppliance: {...this.state.myAppliance}})}\n   };\n   handleChangeScout = (event) => { \n      this.setState({\n         myScout : {...this.state.myScout, [event.target.name]: event.target.value}\n      });\n   };\n   handleChangeSelect = (event) => {\n      //get the appliance id of the choosen value and set in state\n      //dont want to disable any fields but does need to update the fields with appliance values\n      if(event.target.value === \"0\"){ \n         this.setState({\n            myAppliance: {...this.state.newAppliance, id: 0}, \n            myScout: {...this.state.myScout, appliance_id: 0},\n            doingNewAppliance: true\n         })\n      }\n      else{\n         this.setState({\n            myAppliance: {...this.state.usersAppliances[parseInt(event.target.value)-1]},\n            myScout: {...this.state.myScout, appliance_id: this.state.usersAppliances[parseInt(event.target.value)-1].id},\n            doingNewAppliance: false\n         })\n      }\n   };\n   handleChangeCheck = (event) => {\n      this.setState({myAppliance:{...this.state.myAppliance,[event.target.name]:event.target.checked}})\n      if(this.state.doingNewAppliance){this.setState({newAppliance: {...this.state.myAppliance,[event.target.name]:event.target.checked}})}\n   };\n\n\trender(){\n      if(this.state.redirect) {return <Redirect to={this.state.redirect} />}\n\t\tif(this.state.error){\n         return(<div className=\"m-5\"><h3>There was an error</h3></div>) \n      }\n\t\tif(this.state.loading){\n         return (\n            <div className=\"d-flex justify-content-center m-5\">\n               <CircleSpinner size={60} color=\"#686769\" loading={this.state.loading} />\n            </div>)\n\t\t}\n      //need to set the scouts appliance as \"selected\"\n      //value has to match the index of usersAppliances, from that array you can fetch the id\n      let options = this.state.applianceNames.map((data) =>\n            {return <option key={data[2]} value={data[2]}>{data[0]}</option>}\n         );\n\t\treturn(\n<div className=\"m-5\">\n<h3>Edit Scout</h3>\n<form>\n   <div className=\"form-group\">\n      <label>Scout name</label>\n      <input className=\"form-control\" name=\"name\" id=\"inputScoutName\" aria-describedby=\"nameHelp\" onChange={this.handleChangeScout} value={this.state.myScout.name} />\n   </div>\n\n   <div className=\"form-group\">\n      <label>Choose Existing Appliance</label>\n      <select className=\"form-control\" id=\"inputApplianceId\" onChange={this.handleChangeSelect} defaultValue={this.state.usersAppliances.findIndex(app => app.id === this.state.myAppliance.id)+1}>\n         <option key=\"0\" value=\"0\">New Appliance</option>\n         {options}\n      </select>\n   </div>\n\n   <div className=\"form-group\">\n      <label>Appliance name</label>\n      <input className=\"form-control\" name=\"name\" id=\"inputApplianceName\" onChange={this.handleChange} value={this.state.myAppliance.name} />\n   </div>\n\n   <div className=\"form-group\">\n      <label>Appliance type</label>\n      <input className=\"form-control\" name=\"type\" id=\"inputApplianceType\" onChange={this.handleChange} value={this.state.myAppliance.type} />\n   </div>\n\n   <div className=\"form-group\">\n      <label>Alert Message</label>\n      <input className=\"form-control\" name=\"alert_message\" id=\"inputAlertMessage\" onChange={this.handleChange} value={this.state.myAppliance.alert_message} />\n   </div>\n\n   <div className=\"form-group\">\n      <label>Alert Time</label>\n      <input className=\"form-control\" name=\"alert_time\" id=\"inputAlertTime\" onChange={this.handleChange} value={this.state.myAppliance.alert_time} />\n   </div>\n\n   <div className=\"form-check\">\n      <input type=\"checkbox\" className=\"form-check-input\" name=\"alert_email\" onChange={this.handleChangeCheck} checked={this.state.myAppliance.alert_email} id=\"inputAlertEmail\" />\n      <label className=\"form-check-label\">Send email alerts</label>\n   </div>\n\n   <div className=\"form-check\">\n      <input type=\"checkbox\" className=\"form-check-input\" id=\"inputAlertText\" name=\"alert_text\" onChange={this.handleChangeCheck} checked={this.state.myAppliance.alert_text} />\n      <label className=\"form-check-label\">Send text alerts</label>\n   </div>\n\n   <button onClick={this.updateAppliance} className=\"btn btn-success\">Update this scout<CircleSpinner size={20} color=\"#3BBCE5\" loading={this.state.patchLoading} /></button>\n   <button onClick={this.deleteScout} className=\"btn btn-danger\">Delete this scout<CircleSpinner size={20} color=\"#3BBCE5\" loading={this.state.deleteLoading} /></button>\n</form>\n</div>\n\t\t)\n\t}\n}\n\n"]},"metadata":{},"sourceType":"module"}