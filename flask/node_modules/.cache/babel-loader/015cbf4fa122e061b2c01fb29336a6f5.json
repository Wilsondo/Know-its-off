{"ast":null,"code":"var _jsxFileName = \"/mnt/e/MyReact/new_frontend/src/components/tile.js\";\nimport React, { Component } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport { Link } from 'react-router-dom';\nimport { CircleSpinner } from 'react-spinners-kit';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Tile extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      device_id: this.props.device_id,\n      appliance_name: this.props.appliance_name,\n      device_state: this.props.state,\n      timestamp: this.props.timestamp,\n      statusText: \"OFF\",\n      background: \"light\",\n      loading: true\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.state === 1) {\n      this.setState({\n        background: \"success\",\n        statusText: \"ON\"\n      });\n    } else if (this.props.state === 2) {\n      this.setState({});\n    } else if (this.props.state === 0) {\n      this.setState({\n        background: \"danger\"\n      });\n    }\n\n    this.setState({\n      loading: false\n    });\n  }\n\n  render() {\n    if (this.state.loading) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-center m-5\",\n        children: /*#__PURE__*/_jsxDEV(CircleSpinner, {\n          size: 60,\n          color: \"#686769\",\n          loading: this.state.loading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(Card, {\n      bg: this.state.background,\n      className: \"tile text-center col \",\n      children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n        children: /*#__PURE__*/_jsxDEV(Card.Title, {\n          className: \"card-title-device\",\n          children: this.state.appliance_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n          className: \"card-title-status\",\n          children: this.state.statusText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          className: \"card-text-device_state\",\n          children: this.state.state\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          className: \"card-text-timestamp\",\n          children: [\"Last Seen: \", this.state.timestamp]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          className: \"card-button btn btn-primary text-wrap\",\n          to: \"/device/\" + this.state.device_id,\n          children: \"Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 10\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/mnt/e/MyReact/new_frontend/src/components/tile.js"],"names":["React","Component","Card","Link","CircleSpinner","Tile","state","device_id","props","appliance_name","device_state","timestamp","statusText","background","loading","componentDidMount","setState","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Card from 'react-bootstrap/Card'\nimport {Link} from 'react-router-dom';\nimport {CircleSpinner} from 'react-spinners-kit';\n\nexport default class Tile extends Component {\n   state={\n      device_id: this.props.device_id,\n      appliance_name: this.props.appliance_name,\n      device_state: this.props.state,\n      timestamp: this.props.timestamp, \n      statusText: \"OFF\",\n      background: \"light\",\n      loading: true,\n   }\n\n   componentDidMount() {\n      if(this.props.state === 1){\n         this.setState({\n            background: \"success\",\n            statusText: \"ON\"\n         })\n      }\n      else if(this.props.state === 2){\n         this.setState({\n            \n         })\n      }\n      else if(this.props.state === 0){\n         this.setState({background: \"danger\"})\n      }\n      this.setState({loading: false})\n   }\n\n   render(){\n      if(this.state.loading) {\n         return (\n            <div className=\"d-flex justify-content-center m-5\">\n               <CircleSpinner size={60} color=\"#686769\" loading={this.state.loading} />\n            </div>)\n      }\n      return(\n         <Card bg={this.state.background} className=\"tile text-center col \">\n            <Card.Header>\n               <Card.Title className=\"card-title-device\">{this.state.appliance_name}</Card.Title>\n            </Card.Header>\n            <Card.Body>\n               <Card.Title className=\"card-title-status\">{this.state.statusText}</Card.Title>\n               <Card.Text className=\"card-text-device_state\">{this.state.state}</Card.Text>\n               <Card.Text className=\"card-text-timestamp\">Last Seen: {this.state.timestamp}</Card.Text>\n               <Link className=\"card-button btn btn-primary text-wrap\" to={\"/device/\"+this.state.device_id}>Details</Link>\n            </Card.Body>\n         </Card>\n      )\n   }\n}\n"]},"metadata":{},"sourceType":"module"}