{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/mnt/e/MyReact/new_frontend/src/components/home.js\";\nimport React, { Component } from 'react';\nimport axiosBaseURL from '../axios.js';\nimport { Redirect } from 'react-router-dom';\nimport { CircleSpinner } from 'react-spinners-kit';\nimport GridApp from './grid/GridApp';\nimport GridContext from './grid/GridContext';\nexport default class Home extends Component {\n  constructor(props) {\n    super(props);\n\n    this.countAppliancesOn = arr => {\n      var result = 0;\n\n      for (var x = 0; arr.length > x; x++) {\n        if (arr[x].state === true) {\n          result++;\n        }\n      }\n\n      return result;\n    };\n\n    this.state = {\n      myAppliances: [],\n      myScouts: [],\n      loading: true,\n      error: false,\n      redirect: null\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"/devices\").then(app_result => {\n      this.setState({\n        myAppliances: app_result.data,\n        appliancesOn: this.countAppliancesOn(app_result.data)\n      });\n    }).catch(error => {\n      //most likely cause of error here is failed authentication, so redirect\n      this.setState({\n        loading: false,\n        error: true\n      }); //if(error.response.data === \"not authorized\"){this.setState({redirect:\"/login\"})}\n\n      console.log(\"error at get device: \", error.response);\n    });\n  }\n\n  render() {\n    if (this.state.loading) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-center m-5\",\n        children: /*#__PURE__*/_jsxDEV(CircleSpinner, {\n          size: 60,\n          color: \"#686769\",\n          loading: this.state.loading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 10\n      }, this);\n    }\n\n    if (this.state.error) {\n      console.log(this.state);\n\n      if (this.state.redirect) {\n        return /*#__PURE__*/_jsxDEV(Redirect, {\n          to: this.state.redirect\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 39\n        }, this);\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"There was an error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: this.state.error_response\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 46\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 14\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row m-3\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-center\",\n            children: \"Home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 10\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row m-3\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: /*#__PURE__*/_jsxDEV(\"h6\", {\n            className: \"text-muted text-center\",\n            children: [this.state.appliancesOn, \" of your appliances are on.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 10\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(GridApp, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 4\n    }, this);\n  }\n\n}\nHome.contextType = GridContext;","map":{"version":3,"sources":["/mnt/e/MyReact/new_frontend/src/components/home.js"],"names":["React","Component","axiosBaseURL","Redirect","CircleSpinner","GridApp","GridContext","Home","constructor","props","countAppliancesOn","arr","result","x","length","state","myAppliances","myScouts","loading","error","redirect","componentDidMount","axios","get","then","app_result","setState","data","appliancesOn","catch","console","log","response","render","error_response","contextType"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport axiosBaseURL from '../axios.js'\n;\nimport {Redirect} from 'react-router-dom';\nimport {CircleSpinner} from 'react-spinners-kit';\nimport GridApp from './grid/GridApp';\nimport GridContext from './grid/GridContext';\n\nexport default class Home extends Component {\n   static contextType = GridContext\n   constructor(props) {\n      super(props);\n      this.state = {\n         myAppliances: [],\n         myScouts: [],\n         loading: true,\n         error: false,\n         redirect: null\n      };\n   };\n\ncountAppliancesOn = (arr) => {\n   var result = 0;\n   for(var x = 0; arr.length > x; x++){\n      if(arr[x].state === true){\n         result++;\n      }\n   }\n   return result;\n}\n\ncomponentDidMount() {\n   axios.get(\"/devices\")\n      .then( (app_result) => {\n         this.setState({\n            myAppliances: app_result.data,\n            appliancesOn: this.countAppliancesOn(app_result.data)\n         })\n      })\n      .catch( (error) => {\n         //most likely cause of error here is failed authentication, so redirect\n         this.setState({loading: false, error: true});\n         //if(error.response.data === \"not authorized\"){this.setState({redirect:\"/login\"})}\n         console.log(\"error at get device: \", error.response)\n      })\n}\n\nrender(){\n   if(this.state.loading) {\n       return (\n         <div className=\"d-flex justify-content-center m-5\">\n            <CircleSpinner size={60} color=\"#686769\" loading={this.state.loading} />\n         </div>)\n   }\n   if(this.state.error) {\n      console.log(this.state)\n      if(this.state.redirect) {return <Redirect to={this.state.redirect} />}\n      return(<div><h3>There was an error</h3><h3>{this.state.error_response}</h3></div>)\n   }\n   return(\n   <div>\n      <div className=\"row m-3\">\n         <div className=\"col\">\n            <h1 className=\"text-center\">Home</h1>\n         </div>\n      </div>\n      <div className=\"row m-3\">\n         <div className=\"col\">\n            <h6 className=\"text-muted text-center\">\n               {this.state.appliancesOn} of your appliances are on.\n            </h6>\n         </div>\n      </div>\n      {/*<div className=\"row row-cols-lg-4 row-cols-md-3 row-cols-sm-2 row-cols-1 m-3\">\n      <Tile key={scout.id} scout_id={scout.id} scout_name={scout.name} scout_battery={scout.battery_power} appliance_name={scout.appliance_name} appliance_type={scout.appliance_type} appliance_status={scout.appliance_status}/>\n      </div>*/}\n{/*      <GridContextProvider onChange={this.onChange}>\n         <div className=\"container\">\n            <GridDropZone id=\"myScouts\" boxesPerRow={4} rowHeight={100}>\n               {this.state.myScouts.map(scout => (\n                  <GridItem key={scout.id}>\n                     <div className=\"grid-item\">\n                        <div className=\"grid-item-content\" style={{width:\"100%\",height:\"100%\"}}>\n                           <Tile key={scout.id} scout_id={scout.id} scout_name={scout.name} scout_battery={scout.battery_power} appliance_name={scout.appliance_name} appliance_type={scout.appliance_type} appliance_status={scout.appliance_status}/>\n                        </div>\n                     </div>\n                  </GridItem>\n               ))}\n            </GridDropZone>\n         </div>\n      </GridContextProvider>*/}\n      <GridApp/>      \n   </div>\n   )\n}}\n"]},"metadata":{},"sourceType":"module"}