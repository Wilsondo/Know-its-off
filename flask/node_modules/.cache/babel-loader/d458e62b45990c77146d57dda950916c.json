{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/messaging'; // Your web app's Firebase configuration\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCGG2bVOzc9jR_dPhNlTxEn_ZTajkcHVzo\",\n  authDomain: \"know-its-off-jsyg.firebaseapp.com\",\n  projectId: \"know-its-off-jsyg\",\n  storageBucket: \"know-its-off-jsyg.appspot.com\",\n  messagingSenderId: \"1039398438265\",\n  appId: \"1:1039398438265:web:f0e1ae04a1db6c68025ba8\"\n}; // Initialize Firebase\n\nfirebase.initializeApp(firebaseConfig);\nconst messaging = firebase.messaging();\nexport const getToken = setTokenFound => {\n  return messaging.getToken({\n    vapidKey: 'GENERATED_MESSAGING_KEY'\n  }).then(currentToken => {\n    if (currentToken) {\n      console.log('current token for client: ', currentToken);\n      setTokenFound(true); // Track the token -> client mapping, by sending to backend server\n      // show on the UI that permission is secured\n    } else {\n      console.log('No registration token available. Request permission to generate one.');\n      setTokenFound(false); // shows on the UI that permission is required \n    }\n  }).catch(err => {\n    console.log('An error occurred while retrieving token. ', err); // catch error while creating client token\n  });\n};\nexport default firebaseConfig;","map":{"version":3,"sources":["/mnt/e/MyReact/new_frontend/src/components/firebase.js"],"names":["firebase","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","initializeApp","messaging","getToken","setTokenFound","vapidKey","then","currentToken","console","log","catch","err"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP,C,CAEC;;AACC,MAAMC,cAAc,GAAG;AACrBC,EAAAA,MAAM,EAAE,yCADa;AAErBC,EAAAA,UAAU,EAAE,mCAFS;AAGrBC,EAAAA,SAAS,EAAE,mBAHU;AAIrBC,EAAAA,aAAa,EAAE,+BAJM;AAKrBC,EAAAA,iBAAiB,EAAE,eALE;AAMrBC,EAAAA,KAAK,EAAE;AANc,CAAvB,C,CASA;;AACAP,QAAQ,CAACQ,aAAT,CAAuBP,cAAvB;AACA,MAAMQ,SAAS,GAAGT,QAAQ,CAACS,SAAT,EAAlB;AAEA,OAAO,MAAMC,QAAQ,GAAIC,aAAD,IAAmB;AACzC,SAAOF,SAAS,CAACC,QAAV,CAAmB;AAACE,IAAAA,QAAQ,EAAE;AAAX,GAAnB,EAA0DC,IAA1D,CAAgEC,YAAD,IAAkB;AACtF,QAAIA,YAAJ,EAAkB;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0CF,YAA1C;AACAH,MAAAA,aAAa,CAAC,IAAD,CAAb,CAFgB,CAGhB;AACA;AACD,KALD,MAKO;AACLI,MAAAA,OAAO,CAACC,GAAR,CAAY,sEAAZ;AACAL,MAAAA,aAAa,CAAC,KAAD,CAAb,CAFK,CAGL;AACD;AACF,GAXM,EAWJM,KAXI,CAWGC,GAAD,IAAS;AAChBH,IAAAA,OAAO,CAACC,GAAR,CAAY,4CAAZ,EAA0DE,GAA1D,EADgB,CAEhB;AACD,GAdM,CAAP;AAeD,CAhBM;AAkBT,eAAejB,cAAf","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/messaging';\n\n // Your web app's Firebase configuration\n  const firebaseConfig = {\n    apiKey: \"AIzaSyCGG2bVOzc9jR_dPhNlTxEn_ZTajkcHVzo\",\n    authDomain: \"know-its-off-jsyg.firebaseapp.com\",\n    projectId: \"know-its-off-jsyg\",\n    storageBucket: \"know-its-off-jsyg.appspot.com\",\n    messagingSenderId: \"1039398438265\",\n    appId: \"1:1039398438265:web:f0e1ae04a1db6c68025ba8\"\n  };\n\n  // Initialize Firebase\n  firebase.initializeApp(firebaseConfig);\n  const messaging = firebase.messaging();\n\n  export const getToken = (setTokenFound) => {\n    return messaging.getToken({vapidKey: 'GENERATED_MESSAGING_KEY'}).then((currentToken) => {\n      if (currentToken) {\n        console.log('current token for client: ', currentToken);\n        setTokenFound(true);\n        // Track the token -> client mapping, by sending to backend server\n        // show on the UI that permission is secured\n      } else {\n        console.log('No registration token available. Request permission to generate one.');\n        setTokenFound(false);\n        // shows on the UI that permission is required \n      }\n    }).catch((err) => {\n      console.log('An error occurred while retrieving token. ', err);\n      // catch error while creating client token\n    });\n  }\n\nexport default firebaseConfig"]},"metadata":{},"sourceType":"module"}