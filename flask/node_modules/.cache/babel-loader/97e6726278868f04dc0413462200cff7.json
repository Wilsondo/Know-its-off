{"ast":null,"code":"var _jsxFileName = \"/mnt/e/MyReact/new_frontend/src/components/tile.js\";\nimport React, { Component, useState } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport { Link } from 'react-router-dom';\nimport { CircularProgressbar } from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\nimport { buildStyles } from 'react-circular-progressbar';\nimport { CircleSpinner } from 'react-spinners-kit';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Tile extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      device_id: this.props.device_id,\n      device_battery: this.props.device_battery,\n      appliance_name: this.props.appliance_name,\n      device_state: this.props.state,\n      timestamp: this.props.timestamp,\n      statusText: \"OFF\",\n      background: \"light\",\n      loading: true\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.state) {\n      this.setState({\n        background: \"success\",\n        statusText: \"ON\"\n      });\n    } else if (!this.props.state) {\n      this.setState({\n        background: \"danger\"\n      });\n    }\n\n    this.setState({\n      loading: false\n    });\n  }\n\n  render() {\n    var _s = $RefreshSig$();\n\n    if (this.state.loading) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-center m-5\",\n        children: /*#__PURE__*/_jsxDEV(CircleSpinner, {\n          size: 60,\n          color: \"#686769\",\n          loading: this.state.loading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this);\n    }\n\n    function MyComponent() {\n      _s();\n\n      const [value, setValue] = useState();\n\n      const test = () => {\n        this.setValue({});\n      };\n    }\n\n    _s(MyComponent, \"hWRfrSP8yP0Yit5gONTVsURNXRY=\");\n\n    return /*#__PURE__*/_jsxDEV(Card, {\n      bg: this.state.background,\n      className: \"tile text-center col \",\n      children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n        children: [/*#__PURE__*/_jsxDEV(CircularProgressbar, {\n          value: this.state.device_battery,\n          maxValue: 1,\n          text: `${this.state.device_battery}%`,\n          styles: buildStyles({\n            textSize: '2.2rem',\n            textColor: '#000'\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(Card.Title, {\n          className: \"card-title-device\",\n          children: this.state.appliance_name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n          className: \"card-title-status\",\n          children: this.state.statusText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          className: \"card-text-device_state\",\n          children: this.state.state\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          className: \"card-text-timestamp\",\n          children: [\"Last Seen: \", this.state.timestamp]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: test,\n          className: \"btn btn-info\",\n          children: \"test\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          className: \"card-button btn btn-primary text-wrap\",\n          to: \"/device/\" + this.state.device_id,\n          children: \"Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 10\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/mnt/e/MyReact/new_frontend/src/components/tile.js"],"names":["React","Component","useState","Card","Link","CircularProgressbar","buildStyles","CircleSpinner","Tile","state","device_id","props","device_battery","appliance_name","device_state","timestamp","statusText","background","loading","componentDidMount","setState","render","MyComponent","value","setValue","test","textSize","textColor"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,SAAQC,mBAAR,QAAkC,4BAAlC;AACA,OAAO,4CAAP;AACA,SAAQC,WAAR,QAA0B,4BAA1B;AACA,SAAQC,aAAR,QAA4B,oBAA5B;;AAKA,eAAe,MAAMC,IAAN,SAAmBP,SAAnB,CAA6B;AAAA;AAAA;AAAA,SACzCQ,KADyC,GACnC;AACHC,MAAAA,SAAS,EAAE,KAAKC,KAAL,CAAWD,SADnB;AAEHE,MAAAA,cAAc,EAAE,KAAKD,KAAL,CAAWC,cAFxB;AAGHC,MAAAA,cAAc,EAAE,KAAKF,KAAL,CAAWE,cAHxB;AAIHC,MAAAA,YAAY,EAAE,KAAKH,KAAL,CAAWF,KAJtB;AAKHM,MAAAA,SAAS,EAAE,KAAKJ,KAAL,CAAWI,SALnB;AAMHC,MAAAA,UAAU,EAAE,KANT;AAOHC,MAAAA,UAAU,EAAE,OAPT;AAQHC,MAAAA,OAAO,EAAE;AARN,KADmC;AAAA;;AAYzCC,EAAAA,iBAAiB,GAAG;AACjB,QAAG,KAAKR,KAAL,CAAWF,KAAd,EAAoB;AACjB,WAAKW,QAAL,CAAc;AACXH,QAAAA,UAAU,EAAE,SADD;AAEXD,QAAAA,UAAU,EAAE;AAFD,OAAd;AAIF,KALD,MAMK,IAAG,CAAC,KAAKL,KAAL,CAAWF,KAAf,EAAqB;AACvB,WAAKW,QAAL,CAAc;AAACH,QAAAA,UAAU,EAAE;AAAb,OAAd;AACF;;AACD,SAAKG,QAAL,CAAc;AAACF,MAAAA,OAAO,EAAE;AAAV,KAAd;AACF;;AAGDG,EAAAA,MAAM,GAAE;AAAA;;AACL,QAAG,KAAKZ,KAAL,CAAWS,OAAd,EAAuB;AACpB,0BACG;AAAK,QAAA,SAAS,EAAC,mCAAf;AAAA,+BACG,QAAC,aAAD;AAAe,UAAA,IAAI,EAAE,EAArB;AAAyB,UAAA,KAAK,EAAC,SAA/B;AAAyC,UAAA,OAAO,EAAE,KAAKT,KAAL,CAAWS;AAA7D;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,cADH;AAIF;;AACD,aAASI,WAAT,GAAuB;AAAA;;AACpB,YAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBtB,QAAQ,EAAlC;;AACA,YAAMuB,IAAI,GAAG,MAAM;AAChB,aAAKD,QAAL,CAAc,EAAd;AACF,OAFD;AAGF;;AAZI,OAOIF,WAPJ;;AAaL,wBACG,QAAC,IAAD;AAAM,MAAA,EAAE,EAAE,KAAKb,KAAL,CAAWQ,UAArB;AAAiC,MAAA,SAAS,EAAC,uBAA3C;AAAA,8BACG,QAAC,IAAD,CAAM,MAAN;AAAA,gCACG,QAAC,mBAAD;AAAqB,UAAA,KAAK,EAAE,KAAKR,KAAL,CAAWG,cAAvC;AAAuD,UAAA,QAAQ,EAAE,CAAjE;AAAoE,UAAA,IAAI,EAAG,GAAE,KAAKH,KAAL,CAAWG,cAAe,GAAvG;AAA2G,UAAA,MAAM,EAAEN,WAAW,CAAC;AAACoB,YAAAA,QAAQ,EAAE,QAAX;AAAoBC,YAAAA,SAAS,EAAC;AAA9B,WAAD;AAA9H;AAAA;AAAA;AAAA;AAAA,gBADH,eAEG,QAAC,IAAD,CAAM,KAAN;AAAY,UAAA,SAAS,EAAC,mBAAtB;AAAA,oBAA2C,KAAKlB,KAAL,CAAWI;AAAtD;AAAA;AAAA;AAAA;AAAA,gBAFH;AAAA;AAAA;AAAA;AAAA;AAAA,cADH,eAKG,QAAC,IAAD,CAAM,IAAN;AAAA,gCACG,QAAC,IAAD,CAAM,KAAN;AAAY,UAAA,SAAS,EAAC,mBAAtB;AAAA,oBAA2C,KAAKJ,KAAL,CAAWO;AAAtD;AAAA;AAAA;AAAA;AAAA,gBADH,eAEG,QAAC,IAAD,CAAM,IAAN;AAAW,UAAA,SAAS,EAAC,wBAArB;AAAA,oBAA+C,KAAKP,KAAL,CAAWA;AAA1D;AAAA;AAAA;AAAA;AAAA,gBAFH,eAGG,QAAC,IAAD,CAAM,IAAN;AAAW,UAAA,SAAS,EAAC,qBAArB;AAAA,oCAAuD,KAAKA,KAAL,CAAWM,SAAlE;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHH,eAIG;AAAQ,UAAA,OAAO,EAAGU,IAAlB;AAAyB,UAAA,SAAS,EAAC,cAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJH,eAKG,QAAC,IAAD;AAAM,UAAA,SAAS,EAAC,uCAAhB;AAAwD,UAAA,EAAE,EAAE,aAAW,KAAKhB,KAAL,CAAWC,SAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALH;AAAA;AAAA;AAAA;AAAA;AAAA,cALH;AAAA;AAAA;AAAA;AAAA;AAAA,YADH;AAeF;;AAtDwC","sourcesContent":["import React, {Component, useState} from 'react';\nimport Card from 'react-bootstrap/Card'\nimport {Link} from 'react-router-dom';\nimport {CircularProgressbar} from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\nimport {buildStyles} from 'react-circular-progressbar';\nimport {CircleSpinner} from 'react-spinners-kit';\n\n\n\n\nexport default class Tile extends Component {\n   state={\n      device_id: this.props.device_id,\n      device_battery: this.props.device_battery,\n      appliance_name: this.props.appliance_name,\n      device_state: this.props.state,\n      timestamp: this.props.timestamp, \n      statusText: \"OFF\",\n      background: \"light\",\n      loading: true\n   }\n\n   componentDidMount() {\n      if(this.props.state){\n         this.setState({\n            background: \"success\",\n            statusText: \"ON\"\n         })\n      }\n      else if(!this.props.state){\n         this.setState({background: \"danger\"})\n      }\n      this.setState({loading: false})\n   }\n\n\n   render(){\n      if(this.state.loading) {\n         return (\n            <div className=\"d-flex justify-content-center m-5\">\n               <CircleSpinner size={60} color=\"#686769\" loading={this.state.loading} />\n            </div>)\n      }\n      function MyComponent() {\n         const [value, setValue] = useState();\n         const test = () => {\n            this.setValue({});\n         }\n      }\n      return(\n         <Card bg={this.state.background} className=\"tile text-center col \">\n            <Card.Header>\n               <CircularProgressbar value={this.state.device_battery} maxValue={1} text={`${this.state.device_battery}%`} styles={buildStyles({textSize: '2.2rem',textColor:'#000'})}/>\n               <Card.Title className=\"card-title-device\">{this.state.appliance_name}</Card.Title>\n            </Card.Header>\n            <Card.Body>\n               <Card.Title className=\"card-title-status\">{this.state.statusText}</Card.Title>\n               <Card.Text className=\"card-text-device_state\">{this.state.state}</Card.Text>\n               <Card.Text className=\"card-text-timestamp\">Last Seen: {this.state.timestamp}</Card.Text>\n               <button onClick={ test } className=\"btn btn-info\">test</button>\n               <Link className=\"card-button btn btn-primary text-wrap\" to={\"/device/\"+this.state.device_id}>Details</Link>\n            </Card.Body>\n         </Card>\n      )\n   }\n}\n"]},"metadata":{},"sourceType":"module"}