{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/mnt/e/MyReact/new_frontend/src/components/addDevice.js\";\nimport React, { Component } from 'react';\nimport { CircleSpinner } from 'react-spinners-kit';\nimport axiosBaseURL from '../axios.js';\nimport Tile from \"./tile.js\";\nexport default class addDevice extends Component {\n  constructor(props) {\n    super(props);\n\n    this.postData = event => {\n      this.setState({\n        postLoading: true\n      }); //if creating a new appliance post it first\n\n      if (this.state.myDevice.id === \"0\") {\n        axiosBaseURL.post('/device', this.state.myDevice).then(result => {\n          this.setState({\n            myDevice: { ...this.state.myDevice,\n              id: result.data.id\n            },\n            postLoading: false,\n            revealDetails: true\n          });\n          alert(\"Device Creation Successful!\");\n        }).catch(error => {\n          this.setState({\n            postLoading: false,\n            error: true,\n            error_response: error.response.data\n          });\n\n          if (error.response.data === \"not authorized\") {\n            this.setState({\n              redirect: \"/\"\n            });\n          } else if (error.response.data) {\n            console.log(error.response.data);\n          }\n        });\n        event.preventDefault();\n      } else {\n        alert(\"New Device Already Created!\");\n      }\n    };\n\n    this.handleChangeDevice = event => {\n      this.setState({\n        myDevice: { ...this.state.myDevice,\n          [event.target.name]: event.target.value\n        }\n      });\n    };\n\n    this.state = {\n      myDevice: {\n        id: \"0\",\n        appliance_name: \"My Appliance\",\n        device_state: 0,\n        device_battery: 100.0\n      },\n      userDevices: [],\n      applianceNames: [],\n      disabled: false,\n      loading: true,\n      error: false,\n      postLoading: false,\n      redirect: null,\n      revealDetails: false\n    };\n  } //Get users appliances, add the names to the select form element\n\n\n  componentDidMount() {\n    axiosBaseURL.get(\"/devices\").then(result => {\n      this.setState({\n        loading: false,\n        usersDevices: result.data\n      });\n      var myList = [];\n      var i;\n\n      for (i in this.state.usersDevices) {\n        myList.push([this.state.usersDevices[i].appliance_name, this.state.usersDevices[i].id, this.state.usersDevices[i].device_battery, this.state.usersDevices[i].device_state]);\n      }\n\n      this.setState({\n        applianceNames: myList\n      });\n    }).catch(error => {\n      this.setState({\n        loading: false,\n        error: true\n      });\n\n      if (error.response) {\n        this.setState({\n          error_response: error.response.data\n        });\n\n        if (error.response.data === \"not authorized\") {\n          this.setState({\n            redirect: \"/\"\n          });\n        } else if (error.response.data) {\n          console.log(error.response.data);\n        }\n      }\n    });\n  }\n\n  render() {\n    if (this.state.error) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"m-5\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"There was an error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 38\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this);\n    }\n\n    if (this.state.loading) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-center m-5\",\n        children: /*#__PURE__*/_jsxDEV(CircleSpinner, {\n          size: 60,\n          color: \"#686769\",\n          loading: this.state.loading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this);\n    }\n\n    const {\n      revealDetails\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"m-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"New Device\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Appliance Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control\",\n            name: \"appliance_name\",\n            id: \"inputScoutName\",\n            \"aria-describedby\": \"nameHelp\",\n            onChange: this.handleChangeDevice,\n            value: this.state.myDevice.appliance_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 4\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.postData,\n          className: \"btn btn-success\",\n          children: [\"Add this device\", /*#__PURE__*/_jsxDEV(CircleSpinner, {\n            size: 20,\n            color: \"#3BBCE5\",\n            loading: this.state.postLoading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 79\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 4\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 1\n      }, this), revealDetails && /*#__PURE__*/_jsxDEV(Tile, {\n        device_id: item.id,\n        device_battery: item.device_battery,\n        appliance_name: item.appliance_name,\n        state: item.device_state,\n        timestamp: item.timestamp\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 4\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 1\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/mnt/e/MyReact/new_frontend/src/components/addDevice.js"],"names":["React","Component","CircleSpinner","axiosBaseURL","Tile","addDevice","constructor","props","postData","event","setState","postLoading","state","myDevice","id","post","then","result","data","revealDetails","alert","catch","error","error_response","response","redirect","console","log","preventDefault","handleChangeDevice","target","name","value","appliance_name","device_state","device_battery","userDevices","applianceNames","disabled","loading","componentDidMount","get","usersDevices","myList","i","push","render","item","timestamp"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,aAAR,QAA4B,oBAA5B;AACA,OAAOC,YAAP,MAAyB,aAAzB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,eAAe,MAAMC,SAAN,SAAwBJ,SAAxB,CAAkC;AAC/CK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SA6ClBC,QA7CkB,GA6CNC,KAAD,IAAW;AACnB,WAAKC,QAAL,CAAc;AAACC,QAAAA,WAAW,EAAC;AAAb,OAAd,EADmB,CAEnB;;AACA,UAAG,KAAKC,KAAL,CAAWC,QAAX,CAAoBC,EAApB,KAA2B,GAA9B,EAAkC;AAC/BX,QAAAA,YAAY,CAACY,IAAb,CAAkB,SAAlB,EAA6B,KAAKH,KAAL,CAAWC,QAAxC,EACCG,IADD,CACOC,MAAD,IAAY;AACf,eAAKP,QAAL,CAAc;AAAEG,YAAAA,QAAQ,EAAE,EAAC,GAAG,KAAKD,KAAL,CAAWC,QAAf;AAAyBC,cAAAA,EAAE,EAAEG,MAAM,CAACC,IAAP,CAAYJ;AAAzC,aAAZ;AAA0DH,YAAAA,WAAW,EAAC,KAAtE;AAA6EQ,YAAAA,aAAa,EAAC;AAA3F,WAAd;AACAC,UAAAA,KAAK,CAAC,6BAAD,CAAL;AACF,SAJD,EAKCC,KALD,CAKQC,KAAD,IAAW;AACf,eAAKZ,QAAL,CAAc;AAACC,YAAAA,WAAW,EAAC,KAAb;AAAoBW,YAAAA,KAAK,EAAC,IAA1B;AAAgCC,YAAAA,cAAc,EAAED,KAAK,CAACE,QAAN,CAAeN;AAA/D,WAAd;;AACA,cAAGI,KAAK,CAACE,QAAN,CAAeN,IAAf,KAAwB,gBAA3B,EAA4C;AAAE,iBAAKR,QAAL,CAAc;AAACe,cAAAA,QAAQ,EAAE;AAAX,aAAd;AAAgC,WAA9E,MACK,IAAIH,KAAK,CAACE,QAAN,CAAeN,IAAnB,EAAwB;AAACQ,YAAAA,OAAO,CAACC,GAAR,CAAYL,KAAK,CAACE,QAAN,CAAeN,IAA3B;AAAiC;AACjE,SATD;AAUAT,QAAAA,KAAK,CAACmB,cAAN;AACF,OAZD,MAaK;AAACR,QAAAA,KAAK,CAAC,6BAAD,CAAL;AAAqC;AAC7C,KA9DiB;;AAAA,SAgElBS,kBAhEkB,GAgEIpB,KAAD,IAAW;AAC7B,WAAKC,QAAL,CAAc;AACXG,QAAAA,QAAQ,EAAG,EAAC,GAAG,KAAKD,KAAL,CAAWC,QAAf;AAAyB,WAACJ,KAAK,CAACqB,MAAN,CAAaC,IAAd,GAAqBtB,KAAK,CAACqB,MAAN,CAAaE;AAA3D;AADA,OAAd;AAGF,KApEiB;;AAEjB,SAAKpB,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE;AACPC,QAAAA,EAAE,EAAE,GADG;AAEXmB,QAAAA,cAAc,EAAE,cAFL;AAGPC,QAAAA,YAAY,EAAE,CAHP;AAIPC,QAAAA,cAAc,EAAE;AAJT,OADC;AAOXC,MAAAA,WAAW,EAAE,EAPF;AAQXC,MAAAA,cAAc,EAAE,EARL;AASXC,MAAAA,QAAQ,EAAE,KATC;AAUbC,MAAAA,OAAO,EAAE,IAVI;AAWbjB,MAAAA,KAAK,EAAE,KAXM;AAYbX,MAAAA,WAAW,EAAE,KAZA;AAaXc,MAAAA,QAAQ,EAAE,IAbC;AAcXN,MAAAA,aAAa,EAAE;AAdJ,KAAb;AAgBD,GAnB8C,CAqB9C;;;AACAqB,EAAAA,iBAAiB,GAAG;AACjBrC,IAAAA,YAAY,CAACsC,GAAb,CAAiB,UAAjB,EACCzB,IADD,CACOC,MAAD,IAAY;AACf,WAAKP,QAAL,CAAc;AACX6B,QAAAA,OAAO,EAAE,KADE;AAEXG,QAAAA,YAAY,EAAEzB,MAAM,CAACC;AAFV,OAAd;AAIA,UAAIyB,MAAM,GAAG,EAAb;AACA,UAAIC,CAAJ;;AACA,WAAIA,CAAJ,IAAS,KAAKhC,KAAL,CAAW8B,YAApB,EAAkC;AAC/BC,QAAAA,MAAM,CAACE,IAAP,CAAY,CAAC,KAAKjC,KAAL,CAAW8B,YAAX,CAAwBE,CAAxB,EAA2BX,cAA5B,EAA4C,KAAKrB,KAAL,CAAW8B,YAAX,CAAwBE,CAAxB,EAA2B9B,EAAvE,EAA2E,KAAKF,KAAL,CAAW8B,YAAX,CAAwBE,CAAxB,EAA2BT,cAAtG,EAAsH,KAAKvB,KAAL,CAAW8B,YAAX,CAAwBE,CAAxB,EAA2BV,YAAjJ,CAAZ;AACF;;AACD,WAAKxB,QAAL,CAAc;AAAC2B,QAAAA,cAAc,EAAEM;AAAjB,OAAd;AACF,KAZD,EAaCtB,KAbD,CAaSC,KAAD,IAAW;AAChB,WAAKZ,QAAL,CAAc;AAAC6B,QAAAA,OAAO,EAAE,KAAV;AAAiBjB,QAAAA,KAAK,EAAE;AAAxB,OAAd;;AACA,UAAGA,KAAK,CAACE,QAAT,EAAkB;AACf,aAAKd,QAAL,CAAc;AAACa,UAAAA,cAAc,EAAED,KAAK,CAACE,QAAN,CAAeN;AAAhC,SAAd;;AACA,YAAGI,KAAK,CAACE,QAAN,CAAeN,IAAf,KAAwB,gBAA3B,EAA4C;AAAE,eAAKR,QAAL,CAAc;AAACe,YAAAA,QAAQ,EAAE;AAAX,WAAd;AAAgC,SAA9E,MACK,IAAIH,KAAK,CAACE,QAAN,CAAeN,IAAnB,EAAwB;AAACQ,UAAAA,OAAO,CAACC,GAAR,CAAYL,KAAK,CAACE,QAAN,CAAeN,IAA3B;AAAiC;AACjE;AACH,KApBD;AAqBF;;AA2BH4B,EAAAA,MAAM,GAAE;AACP,QAAG,KAAKlC,KAAL,CAAWU,KAAd,EAAoB;AACb,0BAAO;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,+BAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAArB;AAAA;AAAA;AAAA;AAAA,cAAP;AACF;;AACL,QAAG,KAAKV,KAAL,CAAW2B,OAAd,EAAsB;AACf,0BACG;AAAK,QAAA,SAAS,EAAC,mCAAf;AAAA,+BACG,QAAC,aAAD;AAAe,UAAA,IAAI,EAAE,EAArB;AAAyB,UAAA,KAAK,EAAC,SAA/B;AAAyC,UAAA,OAAO,EAAE,KAAK3B,KAAL,CAAW2B;AAA7D;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,cADH;AAIF;;AACD,UAAM;AAACpB,MAAAA;AAAD,QAAkB,KAAKP,KAA7B;AACJ,wBACF;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAEA;AAAA,gCACG;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,kCACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADH,eAEG;AAAO,YAAA,SAAS,EAAC,cAAjB;AAAgC,YAAA,IAAI,EAAC,gBAArC;AAAsD,YAAA,EAAE,EAAC,gBAAzD;AAA0E,gCAAiB,UAA3F;AAAsG,YAAA,QAAQ,EAAE,KAAKiB,kBAArH;AAAyI,YAAA,KAAK,EAAE,KAAKjB,KAAL,CAAWC,QAAX,CAAoBoB;AAApK;AAAA;AAAA;AAAA;AAAA,kBAFH;AAAA;AAAA;AAAA;AAAA;AAAA,gBADH,eAMG;AAAQ,UAAA,OAAO,EAAE,KAAKzB,QAAtB;AAAgC,UAAA,SAAS,EAAC,iBAA1C;AAAA,qDAA2E,QAAC,aAAD;AAAe,YAAA,IAAI,EAAE,EAArB;AAAyB,YAAA,KAAK,EAAC,SAA/B;AAAyC,YAAA,OAAO,EAAE,KAAKI,KAAL,CAAWD;AAA7D;AAAA;AAAA;AAAA;AAAA,kBAA3E;AAAA;AAAA;AAAA;AAAA;AAAA,gBANH;AAAA;AAAA;AAAA;AAAA;AAAA,cAFA,EAUCQ,aAAa,iBACX,QAAC,IAAD;AAAoB,QAAA,SAAS,EAAE4B,IAAI,CAACjC,EAApC;AAAwC,QAAA,cAAc,EAAEiC,IAAI,CAACZ,cAA7D;AAA6E,QAAA,cAAc,EAAEY,IAAI,CAACd,cAAlG;AAAkH,QAAA,KAAK,EAAEc,IAAI,CAACb,YAA9H;AAA4I,QAAA,SAAS,EAAEa,IAAI,CAACC;AAA5J,SAAWD,IAAI,CAACjC,EAAhB;AAAA;AAAA;AAAA;AAAA,cAXH;AAAA;AAAA;AAAA;AAAA;AAAA,YADE;AAgBA;;AAlG+C","sourcesContent":["import React, {Component} from 'react'\nimport {CircleSpinner} from 'react-spinners-kit' \nimport axiosBaseURL from '../axios.js'\nimport Tile from \"./tile.js\";\n\nexport default class addDevice extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      myDevice: {\n         id: \"0\",\n\t\t   appliance_name: \"My Appliance\",\n         device_state: 0, \n         device_battery: 100.0,\n\t   },\n      userDevices: [],\n      applianceNames: [],\n      disabled: false,\n\t   loading: true,\n\t   error: false,\n\t   postLoading: false,\n      redirect: null, \n      revealDetails: false, \n    };\n  }\n\n   //Get users appliances, add the names to the select form element\n   componentDidMount() {\n      axiosBaseURL.get(\"/devices\")\n      .then((result) => {\n         this.setState({\n            loading: false,\n            usersDevices: result.data\n         });\n         var myList = [];\n         var i;\n         for(i in this.state.usersDevices) {\n            myList.push([this.state.usersDevices[i].appliance_name, this.state.usersDevices[i].id, this.state.usersDevices[i].device_battery, this.state.usersDevices[i].device_state])\n         }\n         this.setState({applianceNames: myList})\n      })\n      .catch( (error) => {\n         this.setState({loading: false, error: true});\n         if(error.response){\n            this.setState({error_response: error.response.data});\n            if(error.response.data === \"not authorized\"){ this.setState({redirect: \"/\"}) }\n            else if (error.response.data){console.log(error.response.data)}\n         }\n      })\n   }\n\n   postData = (event) => {\n      this.setState({postLoading:true});\n      //if creating a new appliance post it first\n      if(this.state.myDevice.id === \"0\"){\n         axiosBaseURL.post('/device', this.state.myDevice)\n         .then((result) => {\n            this.setState({ myDevice: {...this.state.myDevice, id: result.data.id}, postLoading:false, revealDetails:true })\n            alert(\"Device Creation Successful!\");\n         })\n         .catch((error) => {\n            this.setState({postLoading:false, error:true, error_response: error.response.data})\n            if(error.response.data === \"not authorized\"){ this.setState({redirect: \"/\"}) }\n            else if (error.response.data){console.log(error.response.data)}\n         })\n         event.preventDefault();\n      }\n      else {alert(\"New Device Already Created!\")}\n   };\n\n   handleChangeDevice = (event) => {\n      this.setState({\n         myDevice : {...this.state.myDevice, [event.target.name]: event.target.value}\n      });\n   };\n\n\trender(){\n\t\tif(this.state.error){ \n         return(<div className=\"m-5\"><h3>There was an error</h3></div>) \n      }\n\t\tif(this.state.loading){\n         return (\n            <div className=\"d-flex justify-content-center m-5\">\n               <CircleSpinner size={60} color=\"#686769\" loading={this.state.loading} />\n            </div>)\n      }\n      const {revealDetails} = this.state;\n\t\treturn(\n<div className=\"m-5\">\n<h3>New Device</h3>\n<form>\n   <div className=\"form-group\">\n      <label>Appliance Name</label>\n      <input className=\"form-control\" name=\"appliance_name\" id=\"inputScoutName\" aria-describedby=\"nameHelp\" onChange={this.handleChangeDevice} value={this.state.myDevice.appliance_name} />\n   </div>\n\n   <button onClick={this.postData} className=\"btn btn-success\">Add this device<CircleSpinner size={20} color=\"#3BBCE5\" loading={this.state.postLoading} /></button>\n</form>\n{revealDetails && (\n   <Tile key={item.id} device_id={item.id} device_battery={item.device_battery} appliance_name={item.appliance_name} state={item.device_state} timestamp={item.timestamp}></Tile>\n)}\n</div>\n\t\t)\n\t}\n}\n\n"]},"metadata":{},"sourceType":"module"}