{"ast":null,"code":"var _jsxFileName = \"/mnt/e/MyReact/new_frontend/src/components/addDevice.js\";\nimport React, { Component } from 'react';\nimport { CircleSpinner } from 'react-spinners-kit';\nimport axiosBaseURL from '../axios.js';\nimport Tile from \"./tile.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class addDevice extends Component {\n  constructor(props) {\n    super(props);\n\n    this.postData = event => {\n      this.setState({\n        postLoading: true\n      }); //if creating a new appliance post it first\n\n      axiosBaseURL.get(\"/allDevices\").then(result => {\n        this.setState({\n          allDevices: result.data\n        });\n      });\n      let idVerify = true;\n\n      for (var x = 0; x < this.state.allDevices.length; x++) if (this.state.myDevice.id === this.state.allDevices[x].id) {\n        idVerify = false;\n      }\n\n      if (idVerify || this.state.myDevice.id === \"0\") {\n        console.log(this.state.myDevice);\n        axiosBaseURL.post('/device', this.state.myDevice).then(result => {\n          this.setState({\n            myDevice: { ...this.state.myDevice,\n              id: result.data.id\n            },\n            postLoading: false,\n            revealDetails: true\n          });\n          alert(\"Device Creation Successful!\");\n          this.props.history.push('/home');\n        }).catch(error => {\n          this.setState({});\n          alert(\"Please enter a valid Device ID!\");\n        });\n      } else {\n        alert(\"Please enter a valid Device ID!\");\n      }\n\n      event.preventDefault();\n    };\n\n    this.handleChangeDevice = event => {\n      this.setState({\n        myDevice: { ...this.state.myDevice,\n          [event.target.name]: event.target.value\n        }\n      });\n    };\n\n    this.state = {\n      myDevice: {\n        id: \"0\",\n        appliance_name: \"My Appliance\",\n        device_state: 0,\n        device_battery: 100.0\n      },\n      userDevices: [],\n      applianceNames: [],\n      allDevices: [],\n      disabled: false,\n      loading: true,\n      error: false,\n      postLoading: false,\n      redirect: null,\n      revealDetails: false\n    };\n  } //Get users appliances, add the names to the select form element\n\n\n  componentDidMount() {\n    axiosBaseURL.get(\"/devices\").then(result => {\n      this.setState({\n        loading: false,\n        usersDevices: result.data\n      });\n      var myList = [];\n      var i;\n\n      for (i in this.state.usersDevices) {\n        myList.push([this.state.usersDevices[i].appliance_name, this.state.usersDevices[i].id, this.state.usersDevices[i].device_battery, this.state.usersDevices[i].device_state]);\n      }\n\n      this.setState({\n        applianceNames: myList\n      });\n    }).catch(error => {\n      this.setState({\n        loading: false,\n        error: true\n      });\n\n      if (error.response) {\n        this.setState({\n          error_response: error.response.data\n        });\n\n        if (error.response.data === \"not authorized\") {\n          this.setState({\n            redirect: \"/\"\n          });\n        } else if (error.response.data) {\n          console.log(error.response.data);\n        }\n      }\n    });\n  }\n\n  render() {\n    if (this.state.error) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"m-5\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"There was an error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 38\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this);\n    }\n\n    if (this.state.loading) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-center m-5\",\n        children: /*#__PURE__*/_jsxDEV(CircleSpinner, {\n          size: 60,\n          color: \"#686769\",\n          loading: this.state.loading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }, this);\n    }\n\n    const {\n      revealDetails\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"m-5 text-light\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"New Device\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Appliance Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control text-dark\",\n            name: \"appliance_name\",\n            id: \"inputApplianceName\",\n            \"aria-describedby\": \"nameHelp\",\n            onChange: this.handleChangeDevice,\n            value: this.state.myDevice.appliance_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Device ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control text-dark\",\n            name: \"id\",\n            id: \"inputId\",\n            \"aria-describedby\": \"nameHelp\",\n            onChange: this.handleChangeDevice,\n            value: this.state.myDevice.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 4\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.postData,\n          className: \"btn btn-success\",\n          children: [\"Add this device\", /*#__PURE__*/_jsxDEV(CircleSpinner, {\n            size: 20,\n            color: \"#3BBCE5\",\n            loading: this.state.postLoading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 79\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 4\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 1\n      }, this), revealDetails && /*#__PURE__*/_jsxDEV(Tile, {\n        device_id: this.state.myDevice.id,\n        device_battery: this.state.myDevice.device_battery,\n        appliance_name: this.state.myDevice.appliance_name,\n        state: this.state.myDevice.device_state,\n        timestamp: this.state.myDevice.timestamp\n      }, this.state.myDevice.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 4\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 1\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/mnt/e/MyReact/new_frontend/src/components/addDevice.js"],"names":["React","Component","CircleSpinner","axiosBaseURL","Tile","addDevice","constructor","props","postData","event","setState","postLoading","get","then","result","allDevices","data","idVerify","x","state","length","myDevice","id","console","log","post","revealDetails","alert","history","push","catch","error","preventDefault","handleChangeDevice","target","name","value","appliance_name","device_state","device_battery","userDevices","applianceNames","disabled","loading","redirect","componentDidMount","usersDevices","myList","i","response","error_response","render","timestamp"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport {CircleSpinner} from 'react-spinners-kit' \nimport axiosBaseURL from '../axios.js'\nimport Tile from \"./tile.js\";\n\nexport default class addDevice extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      myDevice: {\n         id: \"0\",\n\t\t   appliance_name: \"My Appliance\",\n         device_state: 0, \n         device_battery: 100.0,\n\t   },\n      userDevices: [],\n      applianceNames: [],\n      allDevices: [],\n      disabled: false,\n\t   loading: true,\n\t   error: false,\n\t   postLoading: false,\n      redirect: null, \n      revealDetails: false, \n    };\n  }\n\n   //Get users appliances, add the names to the select form element\n   componentDidMount() {\n      axiosBaseURL.get(\"/devices\")\n      .then((result) => {\n         this.setState({\n            loading: false,\n            usersDevices: result.data\n         });\n         var myList = [];\n         var i;\n         for(i in this.state.usersDevices) {\n            myList.push([this.state.usersDevices[i].appliance_name, this.state.usersDevices[i].id, this.state.usersDevices[i].device_battery, this.state.usersDevices[i].device_state])\n         }\n         this.setState({applianceNames: myList})\n      })\n      .catch( (error) => {\n         this.setState({loading: false, error: true});\n         if(error.response){\n            this.setState({error_response: error.response.data});\n            if(error.response.data === \"not authorized\"){ this.setState({redirect: \"/\"}) }\n            else if (error.response.data){console.log(error.response.data)}\n         }\n      })\n   }\n\n   postData = (event) => {\n      this.setState({postLoading:true});\n      //if creating a new appliance post it first\n\n      axiosBaseURL.get(\"/allDevices\")\n      .then((result) => {\n         this.setState({\n            allDevices: result.data\n         })\n      })\n      let idVerify = true;\n      for(var x = 0;x < this.state.allDevices.length; x++)\n         if(this.state.myDevice.id === this.state.allDevices[x].id){\n            idVerify = false;\n         }\n      if(idVerify || this.state.myDevice.id === \"0\"){\n         console.log(this.state.myDevice);\n         axiosBaseURL.post('/device', this.state.myDevice)\n         .then((result) => {\n            this.setState({ myDevice: {...this.state.myDevice, id: result.data.id}, postLoading:false, revealDetails:true })\n            alert(\"Device Creation Successful!\");\n            this.props.history.push('/home');\n         })\n         .catch((error) => {\n            this.setState({})\n            alert(\"Please enter a valid Device ID!\");\n         })\n      }\n      else {\n         alert(\"Please enter a valid Device ID!\");\n      }\n      event.preventDefault();\n   };\n\n   handleChangeDevice = (event) => {\n      this.setState({\n         myDevice : {...this.state.myDevice, [event.target.name]: event.target.value}\n      });\n   };\n\n\trender(){\n\t\tif(this.state.error){ \n         return(<div className=\"m-5\"><h3>There was an error</h3></div>) \n      }\n\t\tif(this.state.loading){\n         return (\n            <div className=\"d-flex justify-content-center m-5\">\n               <CircleSpinner size={60} color=\"#686769\" loading={this.state.loading} />\n            </div>)\n      }\n      const {revealDetails} = this.state;\n\t\treturn(\n<div className=\"m-5 text-light\">\n<h3>New Device</h3>\n<form>\n   <div className=\"form-group\">\n      <label>Appliance Name</label>\n      <input className=\"form-control text-dark\" name=\"appliance_name\" id=\"inputApplianceName\" aria-describedby=\"nameHelp\" onChange={this.handleChangeDevice} value={this.state.myDevice.appliance_name} />\n      <label>Device ID</label>\n      <input className=\"form-control text-dark\" name=\"id\" id=\"inputId\" aria-describedby=\"nameHelp\" onChange={this.handleChangeDevice} value={this.state.myDevice.id} />\n   </div>\n\n   <button onClick={this.postData} className=\"btn btn-success\">Add this device<CircleSpinner size={20} color=\"#3BBCE5\" loading={this.state.postLoading} /></button>\n</form>\n{revealDetails && (\n   <Tile key={this.state.myDevice.id} device_id={this.state.myDevice.id} device_battery={this.state.myDevice.device_battery} appliance_name={this.state.myDevice.appliance_name} state={this.state.myDevice.device_state} timestamp={this.state.myDevice.timestamp}></Tile>\n)}\n</div>\n\t\t)\n\t}\n}\n\n"]},"metadata":{},"sourceType":"module"}