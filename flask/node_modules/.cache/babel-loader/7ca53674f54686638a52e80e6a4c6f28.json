{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/mnt/e/MyReact/new_frontend/src/components/editDevice.js\";\n// This file is muk\nimport React, { Component } from 'react';\nimport { CircleSpinner } from 'react-spinners-kit';\nimport axiosBaseURL from '../axios.js';\nimport { Redirect } from 'react-router-dom';\nexport default class editDevice extends Component {\n  constructor(props) {\n    super(props);\n\n    this.updateDevice = event => {\n      this.setState({\n        patchLoading: true\n      });\n\n      if (this.state.myDevice.id === 0) {\n        //post new appliance and return id to patch scout\n        axiosBaseURL.post('/devices', this.state.myDevice) // unsure of plurality\n        .then(result => {\n          this.setState({\n            myDevice: { ...this.state.myDevice,\n              device_id: result.data.id\n            }\n          });\n        }).catch(error => {\n          this.setState({\n            patchLoading: false,\n            error: true\n          });\n\n          if (error.response.data) {\n            console.log(error.response);\n          }\n        });\n      } else {\n        axiosBaseURL.patch('/device/' + parseInt(this.state.myDevice.id), this.state.myDevice).then(result => {}).catch(error => {\n          this.setState({\n            patchLoading: false,\n            error: true\n          });\n\n          if (error.response.data) {\n            console.log(error.response);\n          }\n        });\n      }\n\n      event.preventDefault();\n    };\n\n    this.deleteDevice = event => {\n      //need to confirm first\n      const r = window.confirm(\"Do you really want to delete this, it will be permanent!\");\n\n      if (r === true) {\n        axiosBaseURL.delete(\"/device/\" + this.state.id).then(result => {\n          this.setState({\n            redirect: \"/home\"\n          });\n        }).catch(error => {\n          this.setState({\n            error: true\n          });\n\n          if (error.response) {\n            console.log(error.response);\n            this.setState({\n              error_response: error.response.data\n            });\n          }\n        });\n      }\n    };\n\n    this.handleChangeDevice = event => {\n      this.setState({\n        myDevice: { ...this.state.myDevice,\n          [event.target.appliance_name]: event.target.value\n        }\n      });\n    };\n\n    this.state = {\n      myDevice: {\n        appliance_name: \"My Appliance\",\n        device_state: 1,\n        device_battery: 100.0,\n        timestamp: \"2019-04-30T08:59:00.000Z\",\n        id: 1\n      },\n      userDevices: [],\n      appNames: [],\n      newDevice_flag: false,\n      disabled: true,\n      loading: true,\n      error: false,\n      patchLoading: false,\n      deleteLoading: false,\n      redirect: null\n    };\n  } //Get users appliances, add the names to the select form element\n\n\n  componentDidMount() {\n    const handle = this.props.match.params.handle;\n    this.setState({\n      id: handle\n    });\n    axiosBaseURL.get(\"/devices\").then(result => {\n      this.setState({\n        userDevices: result.data\n      }); //build a list called appNames used to create the options for the <select>\n\n      var myList = [];\n      var i;\n\n      for (i in this.state.userDevices) {\n        myList.push([this.state.userDevices[i].appliance_name, this.state.userDevices[i].id, parseInt(i) + 1]);\n      }\n\n      this.setState({\n        appNames: myList\n      });\n    }).catch(error => {\n      this.setState({\n        loading: false,\n        error: true\n      });\n\n      if (error.response) {\n        this.setState({\n          error_response: error.response.data\n        });\n\n        if (error.response.data === \"not authorized\") {\n          this.setState({\n            redirect: \"/\"\n          });\n        } else if (error.response.data) {\n          console.log(error.response);\n        }\n      }\n    });\n    console.log(this.state.myDevice);\n  }\n\n  render() {\n    if (this.state.redirect) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: this.state.redirect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 39\n      }, this);\n    }\n\n    if (this.state.error) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"m-5\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"There was an error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 38\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this);\n    }\n\n    if (this.state.loading) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-center m-5\",\n        children: /*#__PURE__*/_jsxDEV(CircleSpinner, {\n          size: 60,\n          color: \"#686769\",\n          loading: this.state.loading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"m-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Edit Device\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Appliance Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control\",\n            name: \"name\",\n            id: \"inputDeviceName\",\n            \"aria-describedby\": \"nameHelp\",\n            onChange: this.handleChangeDevice,\n            value: this.state.myDevice.appliance_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 4\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.updateDevice,\n          className: \"btn btn-success\",\n          children: [\"Update\", /*#__PURE__*/_jsxDEV(CircleSpinner, {\n            size: 20,\n            color: \"#3BBCE5\",\n            loading: this.state.patchLoading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 74\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 4\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.deleteDevice,\n          className: \"btn btn-danger\",\n          children: [\"Delete\", /*#__PURE__*/_jsxDEV(CircleSpinner, {\n            size: 20,\n            color: \"#3BBCE5\",\n            loading: this.state.deleteLoading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 73\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 4\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 1\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/mnt/e/MyReact/new_frontend/src/components/editDevice.js"],"names":["React","Component","CircleSpinner","axiosBaseURL","Redirect","editDevice","constructor","props","updateDevice","event","setState","patchLoading","state","myDevice","id","post","then","result","device_id","data","catch","error","response","console","log","patch","parseInt","preventDefault","deleteDevice","r","window","confirm","delete","redirect","error_response","handleChangeDevice","target","appliance_name","value","device_state","device_battery","timestamp","userDevices","appNames","newDevice_flag","disabled","loading","deleteLoading","componentDidMount","handle","match","params","get","myList","i","push","render"],"mappings":"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","sourcesContent":["// This file is muk\n\nimport React, {Component} from 'react'\nimport {CircleSpinner} from 'react-spinners-kit' \nimport axiosBaseURL from '../axios.js'\n\nimport {Redirect} from 'react-router-dom'\n\nexport default class editDevice extends Component {\n   constructor(props) {\n     super(props);\n     this.state = {\n         myDevice: {\n          appliance_name: \"My Appliance\",\n          device_state: 1, \n          device_battery: 100.0,\n          timestamp: \"2019-04-30T08:59:00.000Z\",\n          id: 1,\n       },\n      userDevices: [],\n      appNames: [],\n      newDevice_flag: false,\n      disabled: true,\n\t   loading: true,\n\t   error: false,\n\t   patchLoading: false,\n      deleteLoading: false,\n      redirect: null\n    };\n  }\n\n   //Get users appliances, add the names to the select form element\n   componentDidMount() {\n      const handle = this.props.match.params.handle;\n      this.setState({id: handle})\n      axiosBaseURL.get(\"/devices\")\n      .then((result) => {\n         this.setState({ userDevices: result.data });\n         //build a list called appNames used to create the options for the <select>\n         var myList = [];\n         var i;\n         for(i in this.state.userDevices) {\n            myList.push([this.state.userDevices[i].appliance_name, this.state.userDevices[i].id, parseInt(i)+1])\n         }\n         this.setState({ appNames: myList })\n      })\n      .catch( (error) => {\n         this.setState({loading: false, error: true});\n         if(error.response){\n            this.setState({error_response: error.response.data});\n            if(error.response.data === \"not authorized\"){ this.setState({redirect: \"/\"}) }\n            else if (error.response.data){console.log(error.response)}\n         }\n      })\n      console.log(this.state.myDevice)\n   }\n\n   updateDevice = (event) => {\n      this.setState({patchLoading:true});\n      if(this.state.myDevice.id === 0) {\n         //post new appliance and return id to patch scout\n         axiosBaseURL.post('/devices', this.state.myDevice) // unsure of plurality\n         .then((result) => {\n            this.setState({myDevice: {...this.state.myDevice, device_id: result.data.id}})\n         })\n         .catch((error)=>{\n            this.setState({patchLoading:false,error:true})\n            if(error.response.data){console.log(error.response)}\n         })\n      }\n      else {\n         axiosBaseURL.patch('/device/'+parseInt(this.state.myDevice.id), this.state.myDevice)\n         .then((result) => {\n         })\n         .catch((error)=>{\n            this.setState({patchLoading:false,error:true})\n            if(error.response.data){console.log(error.response)}\n         })\n      }\n\t   event.preventDefault();\n   };\n   deleteDevice = (event) => {\n      //need to confirm first\n      const r = window.confirm(\"Do you really want to delete this, it will be permanent!\");\n      if(r === true){\n         axiosBaseURL.delete(\"/device/\"+this.state.id)\n         .then((result) => {this.setState({redirect:\"/home\"})})\n         .catch((error) => {\n            this.setState({ error: true });\n            if(error.response){\n               console.log(error.response)\n               this.setState({error_response: error.response.data})\n            }\n         })\n      }\n   };\n   handleChangeDevice = (event) => { \n      this.setState({\n         myDevice : {...this.state.myDevice, [event.target.appliance_name]: event.target.value}\n      });\n   };\n\n\trender(){\n      if(this.state.redirect) {return <Redirect to={this.state.redirect} />}\n\t\tif(this.state.error){\n         return(<div className=\"m-5\"><h3>There was an error</h3></div>) \n      }\n\t\tif(this.state.loading){\n         return (\n            <div className=\"d-flex justify-content-center m-5\">\n               <CircleSpinner size={60} color=\"#686769\" loading={this.state.loading} />\n            </div>)\n\t\t}\n\t\treturn(\n<div className=\"m-5\">\n<h3>Edit Device</h3>\n<form>\n   <div className=\"form-group\">\n      <label>Appliance Name</label>\n      <input className=\"form-control\" name=\"name\" id=\"inputDeviceName\" aria-describedby=\"nameHelp\" onChange={this.handleChangeDevice} value={this.state.myDevice.appliance_name} />\n   </div>\n\n   <button onClick={this.updateDevice} className=\"btn btn-success\">Update<CircleSpinner size={20} color=\"#3BBCE5\" loading={this.state.patchLoading} /></button>\n   <button onClick={this.deleteDevice} className=\"btn btn-danger\">Delete<CircleSpinner size={20} color=\"#3BBCE5\" loading={this.state.deleteLoading} /></button>\n</form>\n</div>\n\t\t)\n\t}\n}\n\n"]},"metadata":{},"sourceType":"module"}